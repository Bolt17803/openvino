<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="1" failures="0" skipped="0" tests="1" time="11.047" timestamp="2024-01-18T02:45:54.264238" hostname="chaitanyasai-HP-ProBook-440-G5"><testcase classname="" name="gw1" time="0.000"><error message="collection failure">Different tests were collected between gw0 and gw1. The difference is:
--- gw0

+++ gw1

@@ -174,134 +174,134 @@

 tensorflow_lite_tests/test_tfl_HardSwish.py::TestTFLiteHardSwishLayerTest::test_hardswish[ ie_device:CPU - precision:FP32 - params:{'shape': [4]} ]
 tensorflow_lite_tests/test_tfl_HardSwish.py::TestTFLiteHardSwishLayerTest::test_hardswish[ ie_device:GPU - precision:FP16 - params:{'shape': [5, 2]} ]
 tensorflow_lite_tests/test_tfl_HardSwish.py::TestTFLiteHardSwishLayerTest::test_hardswish[ ie_device:CPU - precision:FP16 - params:{'shape': [4]} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fc024585360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [9, 10], 'activation': &lt;function relu at 0x7fc03e1b70a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fc024585360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [9, 10], 'activation': None} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fc024585090&gt;, 'shape': [9, 10], 'activation': None} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fc024584f70&gt;, 'shape': [9, 10], 'activation': &lt;function relu at 0x7fc03e1b70a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fc03e1f0280&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function &lt;lambda&gt; at 0x7fc0224cc940&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fc024584f70&gt;, 'shape': [9, 10], 'activation': &lt;function &lt;lambda&gt; at 0x7fc0224cc940&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fc024585360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [9, 10], 'activation': &lt;function &lt;lambda&gt; at 0x7fc0224cc940&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fc024584f70&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu at 0x7fc03e1b70a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fc03e1f0280&gt;, 'shape': [9, 10], 'activation': &lt;function relu6 at 0x7fc02452b9a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fc024585360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [5, 2, 3, 2], 'activation': &lt;function relu6 at 0x7fc02452b9a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fc024584f70&gt;, 'shape': [9, 10], 'activation': &lt;function &lt;lambda&gt; at 0x7fc0224cc940&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fc03e1f0280&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu6 at 0x7fc02452b9a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fc024585360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [9, 10], 'activation': &lt;function &lt;lambda&gt; at 0x7fc0224cc940&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fc024585360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [9, 10], 'activation': None} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fc024585360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [9, 10], 'activation': &lt;function relu at 0x7fc03e1b70a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fc03e1f0280&gt;, 'shape': [9, 10], 'activation': &lt;function relu6 at 0x7fc02452b9a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fc024584f70&gt;, 'shape': [9, 10], 'activation': &lt;function relu at 0x7fc03e1b70a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fc024585090&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu6 at 0x7fc02452b9a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fc024585090&gt;, 'shape': [9, 10], 'activation': &lt;function &lt;lambda&gt; at 0x7fc0224cc940&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fc024585090&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function &lt;lambda&gt; at 0x7fc0224cc940&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fc024585090&gt;, 'shape': [9, 10], 'activation': &lt;function &lt;lambda&gt; at 0x7fc0224cc940&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fc024584f70&gt;, 'shape': [9, 10], 'activation': None} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fc024585090&gt;, 'shape': [9, 10], 'activation': None} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fc03e1f0280&gt;, 'shape': [5, 2, 3, 2], 'activation': None} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fc024585090&gt;, 'shape': [9, 10], 'activation': &lt;function relu6 at 0x7fc02452b9a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fc024584f70&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu at 0x7fc03e1b70a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fc024584f70&gt;, 'shape': [5, 2, 3, 2], 'activation': None} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fc024585360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [5, 2, 3, 2], 'activation': &lt;function &lt;lambda&gt; at 0x7fc0224cc940&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fc024584f70&gt;, 'shape': [9, 10], 'activation': &lt;function relu6 at 0x7fc02452b9a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fc024585360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [5, 2, 3, 2], 'activation': &lt;function &lt;lambda&gt; at 0x7fc0224cc940&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fc03e1f0280&gt;, 'shape': [9, 10], 'activation': &lt;function &lt;lambda&gt; at 0x7fc0224cc940&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fc024585360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [9, 10], 'activation': &lt;function relu6 at 0x7fc02452b9a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fc024584f70&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function &lt;lambda&gt; at 0x7fc0224cc940&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fc024585090&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu6 at 0x7fc02452b9a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fc03e1f0280&gt;, 'shape': [9, 10], 'activation': &lt;function relu at 0x7fc03e1b70a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fc024585090&gt;, 'shape': [9, 10], 'activation': &lt;function relu at 0x7fc03e1b70a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fc024585360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [9, 10], 'activation': &lt;function &lt;lambda&gt; at 0x7fc0224cc940&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fc024585360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [9, 10], 'activation': &lt;function relu6 at 0x7fc02452b9a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fc03e1f0280&gt;, 'shape': [9, 10], 'activation': &lt;function &lt;lambda&gt; at 0x7fc0224cc940&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fc024585360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [5, 2, 3, 2], 'activation': &lt;function &lt;lambda&gt; at 0x7fc0224cc940&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fc03e1f0280&gt;, 'shape': [5, 2, 3, 2], 'activation': None} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fc03e1f0280&gt;, 'shape': [9, 10], 'activation': None} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fc024584f70&gt;, 'shape': [9, 10], 'activation': &lt;function relu at 0x7fc03e1b70a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fc03e1f0280&gt;, 'shape': [9, 10], 'activation': None} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fc024585360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [5, 2, 3, 2], 'activation': None} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fc03e1f0280&gt;, 'shape': [5, 2, 3, 2], 'activation': None} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fc024585090&gt;, 'shape': [9, 10], 'activation': &lt;function relu at 0x7fc03e1b70a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fc024584f70&gt;, 'shape': [9, 10], 'activation': &lt;function relu6 at 0x7fc02452b9a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fc03e1f0280&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu at 0x7fc03e1b70a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fc03e1f0280&gt;, 'shape': [9, 10], 'activation': None} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fc024585090&gt;, 'shape': [5, 2, 3, 2], 'activation': None} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fc03e1f0280&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu at 0x7fc03e1b70a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fc024585090&gt;, 'shape': [9, 10], 'activation': &lt;function relu6 at 0x7fc02452b9a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fc024585090&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu6 at 0x7fc02452b9a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fc024584f70&gt;, 'shape': [5, 2, 3, 2], 'activation': None} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fc03e1f0280&gt;, 'shape': [9, 10], 'activation': &lt;function relu at 0x7fc03e1b70a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fc024585090&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function &lt;lambda&gt; at 0x7fc0224cc940&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fc024585090&gt;, 'shape': [5, 2, 3, 2], 'activation': None} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fc024584f70&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu6 at 0x7fc02452b9a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fc024584f70&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu at 0x7fc03e1b70a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fc024585090&gt;, 'shape': [9, 10], 'activation': None} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fc03e1f0280&gt;, 'shape': [9, 10], 'activation': &lt;function relu6 at 0x7fc02452b9a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fc03e1f0280&gt;, 'shape': [9, 10], 'activation': &lt;function relu6 at 0x7fc02452b9a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fc024585090&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function &lt;lambda&gt; at 0x7fc0224cc940&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fc024585360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [9, 10], 'activation': &lt;function relu6 at 0x7fc02452b9a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fc024585090&gt;, 'shape': [9, 10], 'activation': &lt;function &lt;lambda&gt; at 0x7fc0224cc940&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fc024585360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [9, 10], 'activation': None} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fc024584f70&gt;, 'shape': [9, 10], 'activation': None} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fc024585360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [9, 10], 'activation': &lt;function &lt;lambda&gt; at 0x7fc0224cc940&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fc024584f70&gt;, 'shape': [9, 10], 'activation': &lt;function &lt;lambda&gt; at 0x7fc0224cc940&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fc024585090&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function &lt;lambda&gt; at 0x7fc0224cc940&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fc024585090&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu6 at 0x7fc02452b9a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fc024585090&gt;, 'shape': [9, 10], 'activation': &lt;function relu at 0x7fc03e1b70a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fc024584f70&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu6 at 0x7fc02452b9a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fc03e1f0280&gt;, 'shape': [9, 10], 'activation': &lt;function relu at 0x7fc03e1b70a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fc024584f70&gt;, 'shape': [9, 10], 'activation': &lt;function relu6 at 0x7fc02452b9a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fc024584f70&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu6 at 0x7fc02452b9a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fc024585090&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu at 0x7fc03e1b70a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fc024585090&gt;, 'shape': [9, 10], 'activation': &lt;function relu at 0x7fc03e1b70a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fc03e1f0280&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu at 0x7fc03e1b70a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fc024584f70&gt;, 'shape': [9, 10], 'activation': &lt;function relu at 0x7fc03e1b70a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fc024584f70&gt;, 'shape': [5, 2, 3, 2], 'activation': None} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fc03e1f0280&gt;, 'shape': [5, 2, 3, 2], 'activation': None} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fc024584f70&gt;, 'shape': [9, 10], 'activation': &lt;function &lt;lambda&gt; at 0x7fc0224cc940&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fc024585090&gt;, 'shape': [9, 10], 'activation': &lt;function &lt;lambda&gt; at 0x7fc0224cc940&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fc024585360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [9, 10], 'activation': &lt;function relu at 0x7fc03e1b70a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fc024584f70&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu at 0x7fc03e1b70a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fc03e1f0280&gt;, 'shape': [9, 10], 'activation': &lt;function &lt;lambda&gt; at 0x7fc0224cc940&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fc024584f70&gt;, 'shape': [5, 2, 3, 2], 'activation': None} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fc024585090&gt;, 'shape': [9, 10], 'activation': None} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fc024585360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [5, 2, 3, 2], 'activation': &lt;function relu at 0x7fc03e1b70a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fc024584f70&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function &lt;lambda&gt; at 0x7fc0224cc940&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fc03e1f0280&gt;, 'shape': [9, 10], 'activation': &lt;function relu at 0x7fc03e1b70a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fc024585360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [5, 2, 3, 2], 'activation': &lt;function relu at 0x7fc03e1b70a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fc024585360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [5, 2, 3, 2], 'activation': &lt;function &lt;lambda&gt; at 0x7fc0224cc940&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fc024584f70&gt;, 'shape': [9, 10], 'activation': None} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fc024585360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [5, 2, 3, 2], 'activation': None} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fc03e1f0280&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu6 at 0x7fc02452b9a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fc024585090&gt;, 'shape': [5, 2, 3, 2], 'activation': None} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fc024584f70&gt;, 'shape': [9, 10], 'activation': None} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fc03e1f0280&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu6 at 0x7fc02452b9a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fc03e1f0280&gt;, 'shape': [9, 10], 'activation': None} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fc024585360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [5, 2, 3, 2], 'activation': &lt;function relu6 at 0x7fc02452b9a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fc024585360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [5, 2, 3, 2], 'activation': &lt;function relu6 at 0x7fc02452b9a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fc024585360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [5, 2, 3, 2], 'activation': &lt;function relu at 0x7fc03e1b70a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fc03e1f0280&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function &lt;lambda&gt; at 0x7fc0224cc940&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fc024585360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [9, 10], 'activation': None} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fc024585090&gt;, 'shape': [9, 10], 'activation': &lt;function relu6 at 0x7fc02452b9a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fc024584f70&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu6 at 0x7fc02452b9a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fc024585090&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu at 0x7fc03e1b70a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fc024585090&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu at 0x7fc03e1b70a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fc024585090&gt;, 'shape': [9, 10], 'activation': &lt;function relu6 at 0x7fc02452b9a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fc024585360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [5, 2, 3, 2], 'activation': &lt;function relu at 0x7fc03e1b70a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fc03e1f0280&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu6 at 0x7fc02452b9a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fc03e1f0280&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu at 0x7fc03e1b70a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fc03e1f0280&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function &lt;lambda&gt; at 0x7fc0224cc940&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fc024585360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [5, 2, 3, 2], 'activation': None} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fc03e1f0280&gt;, 'shape': [9, 10], 'activation': &lt;function &lt;lambda&gt; at 0x7fc0224cc940&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fc024585090&gt;, 'shape': [5, 2, 3, 2], 'activation': None} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fc024585360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [5, 2, 3, 2], 'activation': &lt;function relu6 at 0x7fc02452b9a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fc024584f70&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function &lt;lambda&gt; at 0x7fc0224cc940&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fc03e1f0280&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function &lt;lambda&gt; at 0x7fc0224cc940&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fc024585360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [5, 2, 3, 2], 'activation': None} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fc024585090&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu at 0x7fc03e1b70a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fc024585360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [9, 10], 'activation': &lt;function relu at 0x7fc03e1b70a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fc024585360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [9, 10], 'activation': &lt;function relu6 at 0x7fc02452b9a0&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fc024584f70&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function &lt;lambda&gt; at 0x7fc0224cc940&gt;} ]
-tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fc024584f70&gt;, 'shape': [9, 10], 'activation': &lt;function relu6 at 0x7fc02452b9a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fa0630c9090&gt;, 'shape': [9, 10], 'activation': None} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fa0630c9360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [5, 2, 3, 2], 'activation': &lt;function relu6 at 0x7fa06306f9a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fa0630c8f70&gt;, 'shape': [9, 10], 'activation': &lt;function relu6 at 0x7fa06306f9a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fa07cd9c280&gt;, 'shape': [9, 10], 'activation': &lt;function relu at 0x7fa07cd630a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fa0630c9090&gt;, 'shape': [9, 10], 'activation': &lt;function relu6 at 0x7fa06306f9a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fa0630c9090&gt;, 'shape': [5, 2, 3, 2], 'activation': None} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fa0630c8f70&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function &lt;lambda&gt; at 0x7fa061230940&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fa0630c9360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [5, 2, 3, 2], 'activation': &lt;function relu at 0x7fa07cd630a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fa0630c9360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [5, 2, 3, 2], 'activation': &lt;function &lt;lambda&gt; at 0x7fa061230940&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fa0630c9090&gt;, 'shape': [9, 10], 'activation': &lt;function &lt;lambda&gt; at 0x7fa061230940&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fa0630c9360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [5, 2, 3, 2], 'activation': &lt;function relu6 at 0x7fa06306f9a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fa07cd9c280&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu6 at 0x7fa06306f9a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fa0630c9360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [9, 10], 'activation': &lt;function &lt;lambda&gt; at 0x7fa061230940&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fa07cd9c280&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu6 at 0x7fa06306f9a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fa0630c8f70&gt;, 'shape': [9, 10], 'activation': &lt;function relu6 at 0x7fa06306f9a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fa07cd9c280&gt;, 'shape': [9, 10], 'activation': None} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fa0630c9090&gt;, 'shape': [9, 10], 'activation': &lt;function relu at 0x7fa07cd630a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fa07cd9c280&gt;, 'shape': [5, 2, 3, 2], 'activation': None} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fa07cd9c280&gt;, 'shape': [9, 10], 'activation': &lt;function relu6 at 0x7fa06306f9a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fa0630c8f70&gt;, 'shape': [9, 10], 'activation': &lt;function relu6 at 0x7fa06306f9a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fa0630c9090&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function &lt;lambda&gt; at 0x7fa061230940&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fa0630c8f70&gt;, 'shape': [9, 10], 'activation': None} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fa0630c9360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [9, 10], 'activation': &lt;function relu at 0x7fa07cd630a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fa0630c8f70&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu at 0x7fa07cd630a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fa0630c9090&gt;, 'shape': [9, 10], 'activation': None} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fa0630c9090&gt;, 'shape': [9, 10], 'activation': &lt;function &lt;lambda&gt; at 0x7fa061230940&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fa0630c9090&gt;, 'shape': [9, 10], 'activation': &lt;function relu at 0x7fa07cd630a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fa0630c9360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [5, 2, 3, 2], 'activation': &lt;function relu at 0x7fa07cd630a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fa0630c9090&gt;, 'shape': [9, 10], 'activation': &lt;function relu6 at 0x7fa06306f9a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fa0630c9090&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu at 0x7fa07cd630a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fa07cd9c280&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu at 0x7fa07cd630a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fa0630c8f70&gt;, 'shape': [5, 2, 3, 2], 'activation': None} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fa0630c9360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [5, 2, 3, 2], 'activation': &lt;function &lt;lambda&gt; at 0x7fa061230940&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fa0630c8f70&gt;, 'shape': [9, 10], 'activation': &lt;function relu at 0x7fa07cd630a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fa07cd9c280&gt;, 'shape': [9, 10], 'activation': &lt;function relu at 0x7fa07cd630a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fa07cd9c280&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu6 at 0x7fa06306f9a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fa0630c9090&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu6 at 0x7fa06306f9a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fa0630c8f70&gt;, 'shape': [9, 10], 'activation': &lt;function relu6 at 0x7fa06306f9a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fa0630c9090&gt;, 'shape': [9, 10], 'activation': &lt;function relu at 0x7fa07cd630a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fa07cd9c280&gt;, 'shape': [9, 10], 'activation': &lt;function relu6 at 0x7fa06306f9a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fa0630c8f70&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function &lt;lambda&gt; at 0x7fa061230940&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fa07cd9c280&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu at 0x7fa07cd630a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fa0630c9090&gt;, 'shape': [9, 10], 'activation': &lt;function &lt;lambda&gt; at 0x7fa061230940&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fa0630c9090&gt;, 'shape': [5, 2, 3, 2], 'activation': None} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fa07cd9c280&gt;, 'shape': [9, 10], 'activation': &lt;function relu at 0x7fa07cd630a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fa0630c8f70&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu6 at 0x7fa06306f9a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fa07cd9c280&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu at 0x7fa07cd630a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fa0630c9360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [9, 10], 'activation': None} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fa0630c8f70&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu at 0x7fa07cd630a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fa0630c8f70&gt;, 'shape': [9, 10], 'activation': None} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fa0630c9090&gt;, 'shape': [5, 2, 3, 2], 'activation': None} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fa0630c9090&gt;, 'shape': [9, 10], 'activation': None} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fa0630c9360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [9, 10], 'activation': &lt;function &lt;lambda&gt; at 0x7fa061230940&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fa0630c9090&gt;, 'shape': [9, 10], 'activation': &lt;function relu6 at 0x7fa06306f9a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fa0630c9090&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu6 at 0x7fa06306f9a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fa0630c8f70&gt;, 'shape': [9, 10], 'activation': &lt;function relu at 0x7fa07cd630a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fa0630c9090&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function &lt;lambda&gt; at 0x7fa061230940&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fa07cd9c280&gt;, 'shape': [5, 2, 3, 2], 'activation': None} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fa07cd9c280&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function &lt;lambda&gt; at 0x7fa061230940&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fa0630c9090&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu at 0x7fa07cd630a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fa0630c9090&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu6 at 0x7fa06306f9a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fa0630c9090&gt;, 'shape': [9, 10], 'activation': &lt;function relu6 at 0x7fa06306f9a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fa0630c8f70&gt;, 'shape': [9, 10], 'activation': &lt;function relu at 0x7fa07cd630a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fa0630c8f70&gt;, 'shape': [9, 10], 'activation': None} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fa07cd9c280&gt;, 'shape': [9, 10], 'activation': None} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fa0630c8f70&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function &lt;lambda&gt; at 0x7fa061230940&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fa07cd9c280&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function &lt;lambda&gt; at 0x7fa061230940&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fa07cd9c280&gt;, 'shape': [9, 10], 'activation': &lt;function relu6 at 0x7fa06306f9a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fa0630c9090&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu6 at 0x7fa06306f9a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fa07cd9c280&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function &lt;lambda&gt; at 0x7fa061230940&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fa0630c8f70&gt;, 'shape': [5, 2, 3, 2], 'activation': None} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fa0630c9090&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu at 0x7fa07cd630a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fa0630c9360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [9, 10], 'activation': &lt;function relu6 at 0x7fa06306f9a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fa0630c9360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [9, 10], 'activation': &lt;function relu at 0x7fa07cd630a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fa0630c8f70&gt;, 'shape': [5, 2, 3, 2], 'activation': None} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fa07cd9c280&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function &lt;lambda&gt; at 0x7fa061230940&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fa07cd9c280&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu at 0x7fa07cd630a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fa0630c8f70&gt;, 'shape': [5, 2, 3, 2], 'activation': None} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fa0630c8f70&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function &lt;lambda&gt; at 0x7fa061230940&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fa0630c8f70&gt;, 'shape': [9, 10], 'activation': &lt;function &lt;lambda&gt; at 0x7fa061230940&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fa0630c9090&gt;, 'shape': [9, 10], 'activation': &lt;function &lt;lambda&gt; at 0x7fa061230940&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fa0630c9360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [9, 10], 'activation': None} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fa07cd9c280&gt;, 'shape': [9, 10], 'activation': &lt;function relu6 at 0x7fa06306f9a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fa0630c9360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [9, 10], 'activation': &lt;function relu at 0x7fa07cd630a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fa0630c9360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [5, 2, 3, 2], 'activation': &lt;function &lt;lambda&gt; at 0x7fa061230940&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fa0630c9090&gt;, 'shape': [9, 10], 'activation': None} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fa0630c8f70&gt;, 'shape': [9, 10], 'activation': None} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fa0630c9360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [5, 2, 3, 2], 'activation': &lt;function relu at 0x7fa07cd630a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fa0630c9360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [5, 2, 3, 2], 'activation': None} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fa0630c8f70&gt;, 'shape': [9, 10], 'activation': &lt;function &lt;lambda&gt; at 0x7fa061230940&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fa0630c8f70&gt;, 'shape': [9, 10], 'activation': &lt;function &lt;lambda&gt; at 0x7fa061230940&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fa0630c8f70&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu6 at 0x7fa06306f9a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fa0630c8f70&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu at 0x7fa07cd630a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fa0630c9360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [9, 10], 'activation': &lt;function relu6 at 0x7fa06306f9a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fa07cd9c280&gt;, 'shape': [5, 2, 3, 2], 'activation': None} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fa0630c9360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [9, 10], 'activation': &lt;function relu6 at 0x7fa06306f9a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fa0630c9360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [9, 10], 'activation': &lt;function relu6 at 0x7fa06306f9a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fa0630c8f70&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu6 at 0x7fa06306f9a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fa0630c9360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [9, 10], 'activation': None} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fa0630c9090&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function &lt;lambda&gt; at 0x7fa061230940&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fa07cd9c280&gt;, 'shape': [9, 10], 'activation': &lt;function &lt;lambda&gt; at 0x7fa061230940&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fa07cd9c280&gt;, 'shape': [9, 10], 'activation': &lt;function &lt;lambda&gt; at 0x7fa061230940&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fa07cd9c280&gt;, 'shape': [9, 10], 'activation': &lt;function &lt;lambda&gt; at 0x7fa061230940&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fa0630c9090&gt;, 'shape': [5, 2, 3, 2], 'activation': None} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fa07cd9c280&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu6 at 0x7fa06306f9a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fa07cd9c280&gt;, 'shape': [9, 10], 'activation': None} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fa07cd9c280&gt;, 'shape': [9, 10], 'activation': &lt;function relu at 0x7fa07cd630a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fa0630c8f70&gt;, 'shape': [9, 10], 'activation': &lt;function &lt;lambda&gt; at 0x7fa061230940&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fa0630c9090&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function &lt;lambda&gt; at 0x7fa061230940&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fa0630c8f70&gt;, 'shape': [9, 10], 'activation': &lt;function relu at 0x7fa07cd630a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fa07cd9c280&gt;, 'shape': [9, 10], 'activation': &lt;function &lt;lambda&gt; at 0x7fa061230940&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fa0630c9090&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu at 0x7fa07cd630a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fa0630c8f70&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu at 0x7fa07cd630a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fa0630c9360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [5, 2, 3, 2], 'activation': &lt;function &lt;lambda&gt; at 0x7fa061230940&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fa0630c9360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [5, 2, 3, 2], 'activation': &lt;function relu at 0x7fa07cd630a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fa0630c9360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [9, 10], 'activation': None} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'ADD', 'op_func': &lt;function add at 0x7fa0630c8f70&gt;, 'shape': [5, 2, 3, 2], 'activation': &lt;function relu6 at 0x7fa06306f9a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fa0630c9360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [9, 10], 'activation': &lt;function &lt;lambda&gt; at 0x7fa061230940&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fa0630c9360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [9, 10], 'activation': &lt;function &lt;lambda&gt; at 0x7fa061230940&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'MUL', 'op_func': &lt;function multiply at 0x7fa0630c9090&gt;, 'shape': [9, 10], 'activation': &lt;function relu at 0x7fa07cd630a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fa0630c9360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [5, 2, 3, 2], 'activation': None} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fa0630c9360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [5, 2, 3, 2], 'activation': None} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fa0630c9360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [5, 2, 3, 2], 'activation': &lt;function relu6 at 0x7fa06306f9a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fa07cd9c280&gt;, 'shape': [9, 10], 'activation': None} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'SUB', 'op_func': &lt;function subtract at 0x7fa07cd9c280&gt;, 'shape': [5, 2, 3, 2], 'activation': None} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fa0630c9360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [5, 2, 3, 2], 'activation': None} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fa0630c9360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [9, 10], 'activation': &lt;function relu at 0x7fa07cd630a0&gt;} ]
+tensorflow_lite_tests/test_tfl_BinaryWithActivation.py::TestTFLiteBinaryWithActivationLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'DIV', 'op_func': &lt;function divide at 0x7fa0630c9360&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [5, 2, 3, 2], 'activation': &lt;function relu6 at 0x7fa06306f9a0&gt;} ]
 tensorflow_lite_tests/test_tfl_Reshape.py::TestTFLiteReshapeLayerTest::test_reshape[ ie_device:GPU - precision:FP32 - params:{'shape': [1], 'out_shape': [8, 2, 10, 8]} ]
 tensorflow_lite_tests/test_tfl_Reshape.py::TestTFLiteReshapeLayerTest::test_reshape[ ie_device:GPU - precision:FP16 - params:{'shape': [1], 'out_shape': [8, 2, 10, 8]} ]
 tensorflow_lite_tests/test_tfl_Reshape.py::TestTFLiteReshapeLayerTest::test_reshape[ ie_device:CPU - precision:FP32 - params:{'shape': [7, 1], 'out_shape': [10, 3, 8]} ]
@@ -374,86 +374,86 @@

 tensorflow_lite_tests/test_tfl_Squeeze.py::TestTFLiteSqueezeLayerTest::test_squeeze_dims[ ie_device:GPU - precision:FP16 - params:{'shape': [4, 5, 7], 'axis': [3, 9]} ]
 tensorflow_lite_tests/test_tfl_Squeeze.py::TestTFLiteSqueezeLayerTest::test_squeeze_dims[ ie_device:GPU - precision:FP32 - params:{'shape': [9, 3, 10, 4], 'axis': [-1, -2, -3]} ]
 tensorflow_lite_tests/test_tfl_Squeeze.py::TestTFLiteSqueezeLayerTest::test_squeeze_dims[ ie_device:CPU - precision:FP32 - params:{'shape': [5, 3], 'axis': [5]} ]
-tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:GPU - precision:FP16 - params:{'op_name': 'AVERAGE_POOL_2D', 'op_func': &lt;function avg_pool2d at 0x7fc03d5c0310&gt;, 'shape': [28, 30, 15, 6], 'ksize': [24, 20], 'strides': 3, 'padding': 'SAME'} ]
-tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:GPU - precision:FP16 - params:{'op_name': 'AVERAGE_POOL_2D', 'op_func': &lt;function avg_pool2d at 0x7fc03d5c0310&gt;, 'shape': [22, 3, 14, 19], 'ksize': [17, 25], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fc0222eea40&gt;, 'padding': 'VALID'} ]
-tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:CPU - precision:FP32 - params:{'op_name': 'AVERAGE_POOL_2D', 'op_func': &lt;function avg_pool2d at 0x7fc03d5c0310&gt;, 'shape': [22, 3, 14, 19], 'ksize': [17, 25], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fc0222eea40&gt;, 'padding': 'VALID'} ]
-tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:CPU - precision:FP16 - params:{'op_name': 'MAX_POOL_2D', 'op_func': &lt;function max_pool2d at 0x7fc03d5c0d30&gt;, 'shape': [28, 30, 15, 6], 'ksize': [24, 20], 'strides': 3, 'padding': 'SAME'} ]
-tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:GPU - precision:FP16 - params:{'op_name': 'AVERAGE_POOL_2D', 'op_func': &lt;function avg_pool2d at 0x7fc03d5c0310&gt;, 'shape': [16, 23, 12, 24], 'ksize': [19, 29], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fc0222ee9d0&gt;, 'padding': 'SAME'} ]
-tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:GPU - precision:FP32 - params:{'op_name': 'AVERAGE_POOL_2D', 'op_func': &lt;function avg_pool2d at 0x7fc03d5c0310&gt;, 'shape': [22, 3, 14, 19], 'ksize': [17, 25], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fc0222eea40&gt;, 'padding': 'VALID'} ]
-tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:GPU - precision:FP32 - params:{'op_name': 'AVERAGE_POOL_2D', 'op_func': &lt;function avg_pool2d at 0x7fc03d5c0310&gt;, 'shape': [6, 16, 29, 19], 'ksize': [21, 2], 'strides': 1, 'padding': 'VALID'} ]
-tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:CPU - precision:FP16 - params:{'op_name': 'AVERAGE_POOL_2D', 'op_func': &lt;function avg_pool2d at 0x7fc03d5c0310&gt;, 'shape': [28, 30, 15, 6], 'ksize': [24, 20], 'strides': 3, 'padding': 'SAME'} ]
-tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:GPU - precision:FP32 - params:{'op_name': 'MAX_POOL_2D', 'op_func': &lt;function max_pool2d at 0x7fc03d5c0d30&gt;, 'shape': [22, 3, 14, 19], 'ksize': [17, 25], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fc0222eea40&gt;, 'padding': 'VALID'} ]
-tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:GPU - precision:FP16 - params:{'op_name': 'MAX_POOL_2D', 'op_func': &lt;function max_pool2d at 0x7fc03d5c0d30&gt;, 'shape': [6, 16, 29, 19], 'ksize': [21, 2], 'strides': 1, 'padding': 'VALID'} ]
-tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:CPU - precision:FP16 - params:{'op_name': 'AVERAGE_POOL_2D', 'op_func': &lt;function avg_pool2d at 0x7fc03d5c0310&gt;, 'shape': [22, 3, 14, 19], 'ksize': [17, 25], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fc0222eea40&gt;, 'padding': 'VALID'} ]
-tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:GPU - precision:FP32 - params:{'op_name': 'MAX_POOL_2D', 'op_func': &lt;function max_pool2d at 0x7fc03d5c0d30&gt;, 'shape': [28, 30, 15, 6], 'ksize': [24, 20], 'strides': 3, 'padding': 'SAME'} ]
-tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:CPU - precision:FP32 - params:{'op_name': 'AVERAGE_POOL_2D', 'op_func': &lt;function avg_pool2d at 0x7fc03d5c0310&gt;, 'shape': [6, 16, 29, 19], 'ksize': [21, 2], 'strides': 1, 'padding': 'VALID'} ]
-tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:GPU - precision:FP16 - params:{'op_name': 'AVERAGE_POOL_2D', 'op_func': &lt;function avg_pool2d at 0x7fc03d5c0310&gt;, 'shape': [6, 16, 29, 19], 'ksize': [21, 2], 'strides': 1, 'padding': 'VALID'} ]
-tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:CPU - precision:FP16 - params:{'op_name': 'MAX_POOL_2D', 'op_func': &lt;function max_pool2d at 0x7fc03d5c0d30&gt;, 'shape': [16, 23, 12, 24], 'ksize': [19, 29], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fc0222ee9d0&gt;, 'padding': 'SAME'} ]
-tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:CPU - precision:FP32 - params:{'op_name': 'AVERAGE_POOL_2D', 'op_func': &lt;function avg_pool2d at 0x7fc03d5c0310&gt;, 'shape': [28, 30, 15, 6], 'ksize': [24, 20], 'strides': 3, 'padding': 'SAME'} ]
-tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:CPU - precision:FP32 - params:{'op_name': 'MAX_POOL_2D', 'op_func': &lt;function max_pool2d at 0x7fc03d5c0d30&gt;, 'shape': [6, 16, 29, 19], 'ksize': [21, 2], 'strides': 1, 'padding': 'VALID'} ]
-tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:GPU - precision:FP32 - params:{'op_name': 'AVERAGE_POOL_2D', 'op_func': &lt;function avg_pool2d at 0x7fc03d5c0310&gt;, 'shape': [28, 30, 15, 6], 'ksize': [24, 20], 'strides': 3, 'padding': 'SAME'} ]
-tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:CPU - precision:FP16 - params:{'op_name': 'MAX_POOL_2D', 'op_func': &lt;function max_pool2d at 0x7fc03d5c0d30&gt;, 'shape': [22, 3, 14, 19], 'ksize': [17, 25], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fc0222eea40&gt;, 'padding': 'VALID'} ]
-tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:CPU - precision:FP16 - params:{'op_name': 'AVERAGE_POOL_2D', 'op_func': &lt;function avg_pool2d at 0x7fc03d5c0310&gt;, 'shape': [16, 23, 12, 24], 'ksize': [19, 29], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fc0222ee9d0&gt;, 'padding': 'SAME'} ]
-tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:GPU - precision:FP16 - params:{'op_name': 'MAX_POOL_2D', 'op_func': &lt;function max_pool2d at 0x7fc03d5c0d30&gt;, 'shape': [16, 23, 12, 24], 'ksize': [19, 29], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fc0222ee9d0&gt;, 'padding': 'SAME'} ]
-tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:GPU - precision:FP16 - params:{'op_name': 'MAX_POOL_2D', 'op_func': &lt;function max_pool2d at 0x7fc03d5c0d30&gt;, 'shape': [22, 3, 14, 19], 'ksize': [17, 25], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fc0222eea40&gt;, 'padding': 'VALID'} ]
-tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:GPU - precision:FP16 - params:{'op_name': 'MAX_POOL_2D', 'op_func': &lt;function max_pool2d at 0x7fc03d5c0d30&gt;, 'shape': [28, 30, 15, 6], 'ksize': [24, 20], 'strides': 3, 'padding': 'SAME'} ]
-tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:CPU - precision:FP32 - params:{'op_name': 'MAX_POOL_2D', 'op_func': &lt;function max_pool2d at 0x7fc03d5c0d30&gt;, 'shape': [16, 23, 12, 24], 'ksize': [19, 29], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fc0222ee9d0&gt;, 'padding': 'SAME'} ]
-tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:CPU - precision:FP16 - params:{'op_name': 'MAX_POOL_2D', 'op_func': &lt;function max_pool2d at 0x7fc03d5c0d30&gt;, 'shape': [6, 16, 29, 19], 'ksize': [21, 2], 'strides': 1, 'padding': 'VALID'} ]
-tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:GPU - precision:FP32 - params:{'op_name': 'AVERAGE_POOL_2D', 'op_func': &lt;function avg_pool2d at 0x7fc03d5c0310&gt;, 'shape': [16, 23, 12, 24], 'ksize': [19, 29], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fc0222ee9d0&gt;, 'padding': 'SAME'} ]
-tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:CPU - precision:FP32 - params:{'op_name': 'MAX_POOL_2D', 'op_func': &lt;function max_pool2d at 0x7fc03d5c0d30&gt;, 'shape': [22, 3, 14, 19], 'ksize': [17, 25], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fc0222eea40&gt;, 'padding': 'VALID'} ]
-tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:GPU - precision:FP32 - params:{'op_name': 'MAX_POOL_2D', 'op_func': &lt;function max_pool2d at 0x7fc03d5c0d30&gt;, 'shape': [16, 23, 12, 24], 'ksize': [19, 29], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fc0222ee9d0&gt;, 'padding': 'SAME'} ]
-tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:CPU - precision:FP16 - params:{'op_name': 'AVERAGE_POOL_2D', 'op_func': &lt;function avg_pool2d at 0x7fc03d5c0310&gt;, 'shape': [6, 16, 29, 19], 'ksize': [21, 2], 'strides': 1, 'padding': 'VALID'} ]
-tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:CPU - precision:FP32 - params:{'op_name': 'MAX_POOL_2D', 'op_func': &lt;function max_pool2d at 0x7fc03d5c0d30&gt;, 'shape': [28, 30, 15, 6], 'ksize': [24, 20], 'strides': 3, 'padding': 'SAME'} ]
-tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:GPU - precision:FP32 - params:{'op_name': 'MAX_POOL_2D', 'op_func': &lt;function max_pool2d at 0x7fc03d5c0d30&gt;, 'shape': [6, 16, 29, 19], 'ksize': [21, 2], 'strides': 1, 'padding': 'VALID'} ]
-tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:CPU - precision:FP32 - params:{'op_name': 'AVERAGE_POOL_2D', 'op_func': &lt;function avg_pool2d at 0x7fc03d5c0310&gt;, 'shape': [16, 23, 12, 24], 'ksize': [19, 29], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fc0222ee9d0&gt;, 'padding': 'SAME'} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP32 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fc03caf69e0&gt;, 'shape': [10, 3, 2, 1], 'size': [10, 7], 'align_corners': False, 'half_pixel_centers': False} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP32 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fc03caf6c20&gt;, 'shape': [6, 1, 2, 6], 'size': [1, 10], 'align_corners': True, 'half_pixel_centers': False} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP32 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fc03caf69e0&gt;, 'shape': [6, 1, 2, 6], 'size': [1, 10], 'align_corners': True, 'half_pixel_centers': False} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP16 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fc03caf69e0&gt;, 'shape': [6, 1, 2, 6], 'size': [1, 10], 'align_corners': True, 'half_pixel_centers': False} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP16 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fc03caf6c20&gt;, 'shape': [9, 5, 2, 3], 'size': [5, 3], 'align_corners': True, 'half_pixel_centers': False} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP32 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fc03caf6c20&gt;, 'shape': [7, 2, 3, 8], 'size': [4, 7], 'align_corners': False, 'half_pixel_centers': True} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP16 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fc03caf69e0&gt;, 'shape': [10, 3, 2, 1], 'size': [10, 7], 'align_corners': False, 'half_pixel_centers': False} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP16 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fc03caf6c20&gt;, 'shape': [9, 5, 2, 3], 'size': [5, 3], 'align_corners': True, 'half_pixel_centers': False} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP32 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fc03caf69e0&gt;, 'shape': [9, 5, 2, 3], 'size': [5, 3], 'align_corners': True, 'half_pixel_centers': False} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP32 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fc03caf69e0&gt;, 'shape': [7, 2, 3, 8], 'size': [4, 7], 'align_corners': False, 'half_pixel_centers': True} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP16 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fc03caf6c20&gt;, 'shape': [2, 1, 7, 1], 'size': [6, 10], 'align_corners': False, 'half_pixel_centers': True} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP16 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fc03caf6c20&gt;, 'shape': [6, 1, 2, 6], 'size': [1, 10], 'align_corners': True, 'half_pixel_centers': False} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP16 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fc03caf69e0&gt;, 'shape': [9, 6, 6, 9], 'size': [8, 2], 'align_corners': False, 'half_pixel_centers': False} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP16 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fc03caf6c20&gt;, 'shape': [9, 6, 6, 9], 'size': [8, 2], 'align_corners': False, 'half_pixel_centers': False} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP16 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fc03caf6c20&gt;, 'shape': [9, 6, 6, 9], 'size': [8, 2], 'align_corners': False, 'half_pixel_centers': False} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP16 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fc03caf6c20&gt;, 'shape': [10, 3, 2, 1], 'size': [10, 7], 'align_corners': False, 'half_pixel_centers': False} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP16 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fc03caf6c20&gt;, 'shape': [10, 3, 2, 1], 'size': [10, 7], 'align_corners': False, 'half_pixel_centers': False} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP32 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fc03caf69e0&gt;, 'shape': [10, 3, 2, 1], 'size': [10, 7], 'align_corners': False, 'half_pixel_centers': False} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP16 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fc03caf6c20&gt;, 'shape': [7, 2, 3, 8], 'size': [4, 7], 'align_corners': False, 'half_pixel_centers': True} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP16 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fc03caf6c20&gt;, 'shape': [6, 1, 2, 6], 'size': [1, 10], 'align_corners': True, 'half_pixel_centers': False} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP32 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fc03caf69e0&gt;, 'shape': [9, 6, 6, 9], 'size': [8, 2], 'align_corners': False, 'half_pixel_centers': False} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP32 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fc03caf69e0&gt;, 'shape': [2, 1, 7, 1], 'size': [6, 10], 'align_corners': False, 'half_pixel_centers': True} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP16 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fc03caf69e0&gt;, 'shape': [7, 2, 3, 8], 'size': [4, 7], 'align_corners': False, 'half_pixel_centers': True} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP16 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fc03caf69e0&gt;, 'shape': [2, 1, 7, 1], 'size': [6, 10], 'align_corners': False, 'half_pixel_centers': True} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP16 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fc03caf69e0&gt;, 'shape': [2, 1, 7, 1], 'size': [6, 10], 'align_corners': False, 'half_pixel_centers': True} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP32 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fc03caf69e0&gt;, 'shape': [9, 6, 6, 9], 'size': [8, 2], 'align_corners': False, 'half_pixel_centers': False} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP32 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fc03caf69e0&gt;, 'shape': [6, 1, 2, 6], 'size': [1, 10], 'align_corners': True, 'half_pixel_centers': False} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP16 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fc03caf6c20&gt;, 'shape': [2, 1, 7, 1], 'size': [6, 10], 'align_corners': False, 'half_pixel_centers': True} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP16 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fc03caf69e0&gt;, 'shape': [9, 6, 6, 9], 'size': [8, 2], 'align_corners': False, 'half_pixel_centers': False} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP32 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fc03caf6c20&gt;, 'shape': [2, 1, 7, 1], 'size': [6, 10], 'align_corners': False, 'half_pixel_centers': True} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP32 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fc03caf6c20&gt;, 'shape': [9, 6, 6, 9], 'size': [8, 2], 'align_corners': False, 'half_pixel_centers': False} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP16 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fc03caf69e0&gt;, 'shape': [9, 5, 2, 3], 'size': [5, 3], 'align_corners': True, 'half_pixel_centers': False} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP32 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fc03caf6c20&gt;, 'shape': [10, 3, 2, 1], 'size': [10, 7], 'align_corners': False, 'half_pixel_centers': False} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP16 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fc03caf69e0&gt;, 'shape': [10, 3, 2, 1], 'size': [10, 7], 'align_corners': False, 'half_pixel_centers': False} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP16 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fc03caf69e0&gt;, 'shape': [6, 1, 2, 6], 'size': [1, 10], 'align_corners': True, 'half_pixel_centers': False} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP16 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fc03caf69e0&gt;, 'shape': [9, 5, 2, 3], 'size': [5, 3], 'align_corners': True, 'half_pixel_centers': False} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP32 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fc03caf6c20&gt;, 'shape': [2, 1, 7, 1], 'size': [6, 10], 'align_corners': False, 'half_pixel_centers': True} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP16 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fc03caf69e0&gt;, 'shape': [7, 2, 3, 8], 'size': [4, 7], 'align_corners': False, 'half_pixel_centers': True} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP32 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fc03caf6c20&gt;, 'shape': [6, 1, 2, 6], 'size': [1, 10], 'align_corners': True, 'half_pixel_centers': False} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP32 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fc03caf69e0&gt;, 'shape': [9, 5, 2, 3], 'size': [5, 3], 'align_corners': True, 'half_pixel_centers': False} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP32 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fc03caf6c20&gt;, 'shape': [9, 6, 6, 9], 'size': [8, 2], 'align_corners': False, 'half_pixel_centers': False} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP32 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fc03caf6c20&gt;, 'shape': [9, 5, 2, 3], 'size': [5, 3], 'align_corners': True, 'half_pixel_centers': False} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP32 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fc03caf6c20&gt;, 'shape': [9, 5, 2, 3], 'size': [5, 3], 'align_corners': True, 'half_pixel_centers': False} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP32 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fc03caf69e0&gt;, 'shape': [7, 2, 3, 8], 'size': [4, 7], 'align_corners': False, 'half_pixel_centers': True} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP32 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fc03caf6c20&gt;, 'shape': [10, 3, 2, 1], 'size': [10, 7], 'align_corners': False, 'half_pixel_centers': False} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP32 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fc03caf69e0&gt;, 'shape': [2, 1, 7, 1], 'size': [6, 10], 'align_corners': False, 'half_pixel_centers': True} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP32 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fc03caf6c20&gt;, 'shape': [7, 2, 3, 8], 'size': [4, 7], 'align_corners': False, 'half_pixel_centers': True} ]
-tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP16 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fc03caf6c20&gt;, 'shape': [7, 2, 3, 8], 'size': [4, 7], 'align_corners': False, 'half_pixel_centers': True} ]
+tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:CPU - precision:FP32 - params:{'op_name': 'MAX_POOL_2D', 'op_func': &lt;function max_pool2d at 0x7fa07c140d30&gt;, 'shape': [6, 16, 29, 19], 'ksize': [21, 2], 'strides': 1, 'padding': 'VALID'} ]
+tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:CPU - precision:FP16 - params:{'op_name': 'MAX_POOL_2D', 'op_func': &lt;function max_pool2d at 0x7fa07c140d30&gt;, 'shape': [16, 23, 12, 24], 'ksize': [19, 29], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fa06104eea0&gt;, 'padding': 'SAME'} ]
+tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:CPU - precision:FP16 - params:{'op_name': 'MAX_POOL_2D', 'op_func': &lt;function max_pool2d at 0x7fa07c140d30&gt;, 'shape': [28, 30, 15, 6], 'ksize': [24, 20], 'strides': 3, 'padding': 'SAME'} ]
+tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:CPU - precision:FP32 - params:{'op_name': 'AVERAGE_POOL_2D', 'op_func': &lt;function avg_pool2d at 0x7fa07c140310&gt;, 'shape': [28, 30, 15, 6], 'ksize': [24, 20], 'strides': 3, 'padding': 'SAME'} ]
+tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:GPU - precision:FP16 - params:{'op_name': 'MAX_POOL_2D', 'op_func': &lt;function max_pool2d at 0x7fa07c140d30&gt;, 'shape': [16, 23, 12, 24], 'ksize': [19, 29], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fa06104eea0&gt;, 'padding': 'SAME'} ]
+tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:GPU - precision:FP16 - params:{'op_name': 'AVERAGE_POOL_2D', 'op_func': &lt;function avg_pool2d at 0x7fa07c140310&gt;, 'shape': [16, 23, 12, 24], 'ksize': [19, 29], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fa06104eea0&gt;, 'padding': 'SAME'} ]
+tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:CPU - precision:FP32 - params:{'op_name': 'AVERAGE_POOL_2D', 'op_func': &lt;function avg_pool2d at 0x7fa07c140310&gt;, 'shape': [22, 3, 14, 19], 'ksize': [17, 25], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fa06104ef10&gt;, 'padding': 'VALID'} ]
+tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:CPU - precision:FP16 - params:{'op_name': 'MAX_POOL_2D', 'op_func': &lt;function max_pool2d at 0x7fa07c140d30&gt;, 'shape': [6, 16, 29, 19], 'ksize': [21, 2], 'strides': 1, 'padding': 'VALID'} ]
+tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:GPU - precision:FP32 - params:{'op_name': 'AVERAGE_POOL_2D', 'op_func': &lt;function avg_pool2d at 0x7fa07c140310&gt;, 'shape': [28, 30, 15, 6], 'ksize': [24, 20], 'strides': 3, 'padding': 'SAME'} ]
+tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:GPU - precision:FP16 - params:{'op_name': 'MAX_POOL_2D', 'op_func': &lt;function max_pool2d at 0x7fa07c140d30&gt;, 'shape': [22, 3, 14, 19], 'ksize': [17, 25], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fa06104ef10&gt;, 'padding': 'VALID'} ]
+tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:CPU - precision:FP16 - params:{'op_name': 'AVERAGE_POOL_2D', 'op_func': &lt;function avg_pool2d at 0x7fa07c140310&gt;, 'shape': [28, 30, 15, 6], 'ksize': [24, 20], 'strides': 3, 'padding': 'SAME'} ]
+tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:CPU - precision:FP16 - params:{'op_name': 'AVERAGE_POOL_2D', 'op_func': &lt;function avg_pool2d at 0x7fa07c140310&gt;, 'shape': [6, 16, 29, 19], 'ksize': [21, 2], 'strides': 1, 'padding': 'VALID'} ]
+tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:GPU - precision:FP32 - params:{'op_name': 'AVERAGE_POOL_2D', 'op_func': &lt;function avg_pool2d at 0x7fa07c140310&gt;, 'shape': [16, 23, 12, 24], 'ksize': [19, 29], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fa06104eea0&gt;, 'padding': 'SAME'} ]
+tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:CPU - precision:FP32 - params:{'op_name': 'MAX_POOL_2D', 'op_func': &lt;function max_pool2d at 0x7fa07c140d30&gt;, 'shape': [22, 3, 14, 19], 'ksize': [17, 25], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fa06104ef10&gt;, 'padding': 'VALID'} ]
+tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:GPU - precision:FP32 - params:{'op_name': 'MAX_POOL_2D', 'op_func': &lt;function max_pool2d at 0x7fa07c140d30&gt;, 'shape': [22, 3, 14, 19], 'ksize': [17, 25], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fa06104ef10&gt;, 'padding': 'VALID'} ]
+tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:CPU - precision:FP32 - params:{'op_name': 'MAX_POOL_2D', 'op_func': &lt;function max_pool2d at 0x7fa07c140d30&gt;, 'shape': [28, 30, 15, 6], 'ksize': [24, 20], 'strides': 3, 'padding': 'SAME'} ]
+tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:CPU - precision:FP32 - params:{'op_name': 'AVERAGE_POOL_2D', 'op_func': &lt;function avg_pool2d at 0x7fa07c140310&gt;, 'shape': [6, 16, 29, 19], 'ksize': [21, 2], 'strides': 1, 'padding': 'VALID'} ]
+tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:CPU - precision:FP32 - params:{'op_name': 'AVERAGE_POOL_2D', 'op_func': &lt;function avg_pool2d at 0x7fa07c140310&gt;, 'shape': [16, 23, 12, 24], 'ksize': [19, 29], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fa06104eea0&gt;, 'padding': 'SAME'} ]
+tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:GPU - precision:FP32 - params:{'op_name': 'MAX_POOL_2D', 'op_func': &lt;function max_pool2d at 0x7fa07c140d30&gt;, 'shape': [28, 30, 15, 6], 'ksize': [24, 20], 'strides': 3, 'padding': 'SAME'} ]
+tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:CPU - precision:FP16 - params:{'op_name': 'AVERAGE_POOL_2D', 'op_func': &lt;function avg_pool2d at 0x7fa07c140310&gt;, 'shape': [16, 23, 12, 24], 'ksize': [19, 29], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fa06104eea0&gt;, 'padding': 'SAME'} ]
+tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:GPU - precision:FP16 - params:{'op_name': 'AVERAGE_POOL_2D', 'op_func': &lt;function avg_pool2d at 0x7fa07c140310&gt;, 'shape': [6, 16, 29, 19], 'ksize': [21, 2], 'strides': 1, 'padding': 'VALID'} ]
+tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:GPU - precision:FP32 - params:{'op_name': 'MAX_POOL_2D', 'op_func': &lt;function max_pool2d at 0x7fa07c140d30&gt;, 'shape': [16, 23, 12, 24], 'ksize': [19, 29], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fa06104eea0&gt;, 'padding': 'SAME'} ]
+tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:GPU - precision:FP16 - params:{'op_name': 'AVERAGE_POOL_2D', 'op_func': &lt;function avg_pool2d at 0x7fa07c140310&gt;, 'shape': [28, 30, 15, 6], 'ksize': [24, 20], 'strides': 3, 'padding': 'SAME'} ]
+tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:GPU - precision:FP32 - params:{'op_name': 'AVERAGE_POOL_2D', 'op_func': &lt;function avg_pool2d at 0x7fa07c140310&gt;, 'shape': [22, 3, 14, 19], 'ksize': [17, 25], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fa06104ef10&gt;, 'padding': 'VALID'} ]
+tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:CPU - precision:FP16 - params:{'op_name': 'MAX_POOL_2D', 'op_func': &lt;function max_pool2d at 0x7fa07c140d30&gt;, 'shape': [22, 3, 14, 19], 'ksize': [17, 25], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fa06104ef10&gt;, 'padding': 'VALID'} ]
+tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:CPU - precision:FP16 - params:{'op_name': 'AVERAGE_POOL_2D', 'op_func': &lt;function avg_pool2d at 0x7fa07c140310&gt;, 'shape': [22, 3, 14, 19], 'ksize': [17, 25], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fa06104ef10&gt;, 'padding': 'VALID'} ]
+tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:CPU - precision:FP32 - params:{'op_name': 'MAX_POOL_2D', 'op_func': &lt;function max_pool2d at 0x7fa07c140d30&gt;, 'shape': [16, 23, 12, 24], 'ksize': [19, 29], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fa06104eea0&gt;, 'padding': 'SAME'} ]
+tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:GPU - precision:FP16 - params:{'op_name': 'AVERAGE_POOL_2D', 'op_func': &lt;function avg_pool2d at 0x7fa07c140310&gt;, 'shape': [22, 3, 14, 19], 'ksize': [17, 25], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fa06104ef10&gt;, 'padding': 'VALID'} ]
+tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:GPU - precision:FP32 - params:{'op_name': 'AVERAGE_POOL_2D', 'op_func': &lt;function avg_pool2d at 0x7fa07c140310&gt;, 'shape': [6, 16, 29, 19], 'ksize': [21, 2], 'strides': 1, 'padding': 'VALID'} ]
+tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:GPU - precision:FP32 - params:{'op_name': 'MAX_POOL_2D', 'op_func': &lt;function max_pool2d at 0x7fa07c140d30&gt;, 'shape': [6, 16, 29, 19], 'ksize': [21, 2], 'strides': 1, 'padding': 'VALID'} ]
+tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:GPU - precision:FP16 - params:{'op_name': 'MAX_POOL_2D', 'op_func': &lt;function max_pool2d at 0x7fa07c140d30&gt;, 'shape': [28, 30, 15, 6], 'ksize': [24, 20], 'strides': 3, 'padding': 'SAME'} ]
+tensorflow_lite_tests/test_tfl_Pool.py::TestTFLitePoolLayerTest::test_pool[ ie_device:GPU - precision:FP16 - params:{'op_name': 'MAX_POOL_2D', 'op_func': &lt;function max_pool2d at 0x7fa07c140d30&gt;, 'shape': [6, 16, 29, 19], 'ksize': [21, 2], 'strides': 1, 'padding': 'VALID'} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP16 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fa07b86ec20&gt;, 'shape': [9, 5, 2, 3], 'size': [5, 3], 'align_corners': True, 'half_pixel_centers': False} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP16 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fa07b86ec20&gt;, 'shape': [9, 6, 6, 9], 'size': [8, 2], 'align_corners': False, 'half_pixel_centers': False} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP32 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fa07b86ec20&gt;, 'shape': [9, 6, 6, 9], 'size': [8, 2], 'align_corners': False, 'half_pixel_centers': False} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP16 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fa07b86e9e0&gt;, 'shape': [10, 3, 2, 1], 'size': [10, 7], 'align_corners': False, 'half_pixel_centers': False} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP32 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fa07b86e9e0&gt;, 'shape': [9, 6, 6, 9], 'size': [8, 2], 'align_corners': False, 'half_pixel_centers': False} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP16 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fa07b86ec20&gt;, 'shape': [7, 2, 3, 8], 'size': [4, 7], 'align_corners': False, 'half_pixel_centers': True} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP16 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fa07b86e9e0&gt;, 'shape': [9, 5, 2, 3], 'size': [5, 3], 'align_corners': True, 'half_pixel_centers': False} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP32 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fa07b86ec20&gt;, 'shape': [7, 2, 3, 8], 'size': [4, 7], 'align_corners': False, 'half_pixel_centers': True} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP16 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fa07b86e9e0&gt;, 'shape': [9, 5, 2, 3], 'size': [5, 3], 'align_corners': True, 'half_pixel_centers': False} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP16 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fa07b86ec20&gt;, 'shape': [6, 1, 2, 6], 'size': [1, 10], 'align_corners': True, 'half_pixel_centers': False} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP32 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fa07b86e9e0&gt;, 'shape': [7, 2, 3, 8], 'size': [4, 7], 'align_corners': False, 'half_pixel_centers': True} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP16 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fa07b86ec20&gt;, 'shape': [7, 2, 3, 8], 'size': [4, 7], 'align_corners': False, 'half_pixel_centers': True} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP32 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fa07b86ec20&gt;, 'shape': [7, 2, 3, 8], 'size': [4, 7], 'align_corners': False, 'half_pixel_centers': True} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP32 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fa07b86e9e0&gt;, 'shape': [6, 1, 2, 6], 'size': [1, 10], 'align_corners': True, 'half_pixel_centers': False} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP32 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fa07b86ec20&gt;, 'shape': [9, 5, 2, 3], 'size': [5, 3], 'align_corners': True, 'half_pixel_centers': False} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP16 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fa07b86e9e0&gt;, 'shape': [10, 3, 2, 1], 'size': [10, 7], 'align_corners': False, 'half_pixel_centers': False} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP32 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fa07b86e9e0&gt;, 'shape': [7, 2, 3, 8], 'size': [4, 7], 'align_corners': False, 'half_pixel_centers': True} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP16 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fa07b86ec20&gt;, 'shape': [9, 5, 2, 3], 'size': [5, 3], 'align_corners': True, 'half_pixel_centers': False} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP32 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fa07b86e9e0&gt;, 'shape': [9, 5, 2, 3], 'size': [5, 3], 'align_corners': True, 'half_pixel_centers': False} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP16 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fa07b86ec20&gt;, 'shape': [9, 6, 6, 9], 'size': [8, 2], 'align_corners': False, 'half_pixel_centers': False} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP32 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fa07b86ec20&gt;, 'shape': [10, 3, 2, 1], 'size': [10, 7], 'align_corners': False, 'half_pixel_centers': False} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP16 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fa07b86ec20&gt;, 'shape': [6, 1, 2, 6], 'size': [1, 10], 'align_corners': True, 'half_pixel_centers': False} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP32 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fa07b86e9e0&gt;, 'shape': [9, 6, 6, 9], 'size': [8, 2], 'align_corners': False, 'half_pixel_centers': False} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP16 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fa07b86e9e0&gt;, 'shape': [2, 1, 7, 1], 'size': [6, 10], 'align_corners': False, 'half_pixel_centers': True} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP16 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fa07b86e9e0&gt;, 'shape': [9, 6, 6, 9], 'size': [8, 2], 'align_corners': False, 'half_pixel_centers': False} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP32 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fa07b86e9e0&gt;, 'shape': [2, 1, 7, 1], 'size': [6, 10], 'align_corners': False, 'half_pixel_centers': True} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP32 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fa07b86e9e0&gt;, 'shape': [2, 1, 7, 1], 'size': [6, 10], 'align_corners': False, 'half_pixel_centers': True} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP16 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fa07b86e9e0&gt;, 'shape': [6, 1, 2, 6], 'size': [1, 10], 'align_corners': True, 'half_pixel_centers': False} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP16 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fa07b86ec20&gt;, 'shape': [2, 1, 7, 1], 'size': [6, 10], 'align_corners': False, 'half_pixel_centers': True} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP32 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fa07b86e9e0&gt;, 'shape': [10, 3, 2, 1], 'size': [10, 7], 'align_corners': False, 'half_pixel_centers': False} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP32 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fa07b86ec20&gt;, 'shape': [9, 5, 2, 3], 'size': [5, 3], 'align_corners': True, 'half_pixel_centers': False} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP16 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fa07b86e9e0&gt;, 'shape': [7, 2, 3, 8], 'size': [4, 7], 'align_corners': False, 'half_pixel_centers': True} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP32 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fa07b86ec20&gt;, 'shape': [9, 6, 6, 9], 'size': [8, 2], 'align_corners': False, 'half_pixel_centers': False} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP32 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fa07b86e9e0&gt;, 'shape': [6, 1, 2, 6], 'size': [1, 10], 'align_corners': True, 'half_pixel_centers': False} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP16 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fa07b86ec20&gt;, 'shape': [10, 3, 2, 1], 'size': [10, 7], 'align_corners': False, 'half_pixel_centers': False} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP32 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fa07b86ec20&gt;, 'shape': [6, 1, 2, 6], 'size': [1, 10], 'align_corners': True, 'half_pixel_centers': False} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP16 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fa07b86e9e0&gt;, 'shape': [6, 1, 2, 6], 'size': [1, 10], 'align_corners': True, 'half_pixel_centers': False} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP32 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fa07b86ec20&gt;, 'shape': [6, 1, 2, 6], 'size': [1, 10], 'align_corners': True, 'half_pixel_centers': False} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP32 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fa07b86e9e0&gt;, 'shape': [10, 3, 2, 1], 'size': [10, 7], 'align_corners': False, 'half_pixel_centers': False} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP32 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fa07b86ec20&gt;, 'shape': [2, 1, 7, 1], 'size': [6, 10], 'align_corners': False, 'half_pixel_centers': True} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP32 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fa07b86e9e0&gt;, 'shape': [9, 5, 2, 3], 'size': [5, 3], 'align_corners': True, 'half_pixel_centers': False} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP16 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fa07b86e9e0&gt;, 'shape': [9, 6, 6, 9], 'size': [8, 2], 'align_corners': False, 'half_pixel_centers': False} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP32 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fa07b86ec20&gt;, 'shape': [2, 1, 7, 1], 'size': [6, 10], 'align_corners': False, 'half_pixel_centers': True} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP16 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fa07b86e9e0&gt;, 'shape': [2, 1, 7, 1], 'size': [6, 10], 'align_corners': False, 'half_pixel_centers': True} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP16 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fa07b86ec20&gt;, 'shape': [10, 3, 2, 1], 'size': [10, 7], 'align_corners': False, 'half_pixel_centers': False} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP32 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fa07b86ec20&gt;, 'shape': [10, 3, 2, 1], 'size': [10, 7], 'align_corners': False, 'half_pixel_centers': False} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:GPU - precision:FP16 - params:{'op_name': ['RESIZE_NEAREST_NEIGHBOR'], 'op_func': &lt;function resize_nearest_neighbor at 0x7fa07b86ec20&gt;, 'shape': [2, 1, 7, 1], 'size': [6, 10], 'align_corners': False, 'half_pixel_centers': True} ]
+tensorflow_lite_tests/test_tfl_Resize.py::TestTFLiteResizeLayerTest::test_resize_resize[ ie_device:CPU - precision:FP16 - params:{'op_name': ['RESIZE_BILINEAR'], 'op_func': &lt;function resize_bilinear at 0x7fa07b86e9e0&gt;, 'shape': [7, 2, 3, 8], 'size': [4, 7], 'align_corners': False, 'half_pixel_centers': True} ]
 tensorflow_lite_tests/test_tfl_Unpack.py::TestTFLiteUnpackLayerTest::test_unpack[ ie_device:CPU - precision:FP32 - params:{'shape': [4, 2, 4, 3], 'axis': 2} ]
 tensorflow_lite_tests/test_tfl_Unpack.py::TestTFLiteUnpackLayerTest::test_unpack[ ie_device:CPU - precision:FP16 - params:{'shape': [1, 2, 3, 1], 'axis': -1} ]
 tensorflow_lite_tests/test_tfl_Unpack.py::TestTFLiteUnpackLayerTest::test_unpack[ ie_device:GPU - precision:FP16 - params:{'shape': [1], 'axis': -2} ]
@@ -478,146 +478,146 @@

 tensorflow_lite_tests/test_tfl_Unpack.py::TestTFLiteUnpackLayerTest::test_unpack[ ie_device:CPU - precision:FP32 - params:{'shape': [3, 2, 1], 'axis': -2} ]
 tensorflow_lite_tests/test_tfl_Unpack.py::TestTFLiteUnpackLayerTest::test_unpack[ ie_device:GPU - precision:FP32 - params:{'shape': [1], 'axis': -2} ]
 tensorflow_lite_tests/test_tfl_Unpack.py::TestTFLiteUnpackLayerTest::test_unpack[ ie_device:GPU - precision:FP16 - params:{'shape': [4, 2, 4, 3], 'axis': 2} ]
-tensorflow_lite_tests/test_tfl_Conv2D.py::TestTFLiteConv2DLayerTest::test_conv2d[ ie_device:CPU - precision:FP32 - params:{'shape': [16, 22, 10, 9], 'ksize': [2, 27, 1, 22], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fc0223e60a0&gt;, 'padding': 'VALID', 'dilations': [7, 10, 1, 4]} ]
+tensorflow_lite_tests/test_tfl_Conv2D.py::TestTFLiteConv2DLayerTest::test_conv2d[ ie_device:GPU - precision:FP32 - params:{'shape': [16, 22, 10, 9], 'ksize': [2, 27, 1, 22], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fa06114e260&gt;, 'padding': 'VALID', 'dilations': [7, 10, 1, 4]} ]
 tensorflow_lite_tests/test_tfl_Conv2D.py::TestTFLiteConv2DLayerTest::test_conv2d[ ie_device:CPU - precision:FP32 - params:{'shape': [16, 9, 15, 6], 'ksize': [13, 6, 16, 18], 'strides': 1, 'padding': 'VALID', 'dilations': [1, 1, 1, 1]} ]
-tensorflow_lite_tests/test_tfl_Conv2D.py::TestTFLiteConv2DLayerTest::test_conv2d[ ie_device:GPU - precision:FP16 - params:{'shape': [21, 13, 20, 20], 'ksize': [7, 30, 22, 6], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fc0223e54d0&gt;, 'padding': 'SAME', 'dilations': [6, 2, 7, 7]} ]
 tensorflow_lite_tests/test_tfl_Conv2D.py::TestTFLiteConv2DLayerTest::test_conv2d[ ie_device:GPU - precision:FP32 - params:{'shape': [21, 14, 21, 8], 'ksize': [8, 26, 4, 3], 'strides': 2, 'padding': 'SAME', 'dilations': [1, 1, 1, 1]} ]
-tensorflow_lite_tests/test_tfl_Conv2D.py::TestTFLiteConv2DLayerTest::test_conv2d[ ie_device:CPU - precision:FP16 - params:{'shape': [16, 22, 10, 9], 'ksize': [2, 27, 1, 22], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fc0223e60a0&gt;, 'padding': 'VALID', 'dilations': [7, 10, 1, 4]} ]
 tensorflow_lite_tests/test_tfl_Conv2D.py::TestTFLiteConv2DLayerTest::test_conv2d[ ie_device:CPU - precision:FP32 - params:{'shape': [21, 14, 21, 8], 'ksize': [8, 26, 4, 3], 'strides': 2, 'padding': 'SAME', 'dilations': [1, 1, 1, 1]} ]
-tensorflow_lite_tests/test_tfl_Conv2D.py::TestTFLiteConv2DLayerTest::test_conv2d[ ie_device:CPU - precision:FP16 - params:{'shape': [21, 13, 20, 20], 'ksize': [7, 30, 22, 6], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fc0223e54d0&gt;, 'padding': 'SAME', 'dilations': [6, 2, 7, 7]} ]
-tensorflow_lite_tests/test_tfl_Conv2D.py::TestTFLiteConv2DLayerTest::test_conv2d[ ie_device:GPU - precision:FP32 - params:{'shape': [16, 22, 10, 9], 'ksize': [2, 27, 1, 22], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fc0223e60a0&gt;, 'padding': 'VALID', 'dilations': [7, 10, 1, 4]} ]
-tensorflow_lite_tests/test_tfl_Conv2D.py::TestTFLiteConv2DLayerTest::test_conv2d[ ie_device:GPU - precision:FP32 - params:{'shape': [21, 13, 20, 20], 'ksize': [7, 30, 22, 6], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fc0223e54d0&gt;, 'padding': 'SAME', 'dilations': [6, 2, 7, 7]} ]
+tensorflow_lite_tests/test_tfl_Conv2D.py::TestTFLiteConv2DLayerTest::test_conv2d[ ie_device:CPU - precision:FP16 - params:{'shape': [21, 13, 20, 20], 'ksize': [7, 30, 22, 6], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fa06114d690&gt;, 'padding': 'SAME', 'dilations': [6, 2, 7, 7]} ]
+tensorflow_lite_tests/test_tfl_Conv2D.py::TestTFLiteConv2DLayerTest::test_conv2d[ ie_device:GPU - precision:FP32 - params:{'shape': [21, 13, 20, 20], 'ksize': [7, 30, 22, 6], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fa06114d690&gt;, 'padding': 'SAME', 'dilations': [6, 2, 7, 7]} ]
 tensorflow_lite_tests/test_tfl_Conv2D.py::TestTFLiteConv2DLayerTest::test_conv2d[ ie_device:CPU - precision:FP16 - params:{'shape': [21, 14, 21, 8], 'ksize': [8, 26, 4, 3], 'strides': 2, 'padding': 'SAME', 'dilations': [1, 1, 1, 1]} ]
+tensorflow_lite_tests/test_tfl_Conv2D.py::TestTFLiteConv2DLayerTest::test_conv2d[ ie_device:CPU - precision:FP32 - params:{'shape': [21, 13, 20, 20], 'ksize': [7, 30, 22, 6], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fa06114d690&gt;, 'padding': 'SAME', 'dilations': [6, 2, 7, 7]} ]
 tensorflow_lite_tests/test_tfl_Conv2D.py::TestTFLiteConv2DLayerTest::test_conv2d[ ie_device:CPU - precision:FP16 - params:{'shape': [16, 9, 15, 6], 'ksize': [13, 6, 16, 18], 'strides': 1, 'padding': 'VALID', 'dilations': [1, 1, 1, 1]} ]
-tensorflow_lite_tests/test_tfl_Conv2D.py::TestTFLiteConv2DLayerTest::test_conv2d[ ie_device:CPU - precision:FP32 - params:{'shape': [21, 13, 20, 20], 'ksize': [7, 30, 22, 6], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fc0223e54d0&gt;, 'padding': 'SAME', 'dilations': [6, 2, 7, 7]} ]
+tensorflow_lite_tests/test_tfl_Conv2D.py::TestTFLiteConv2DLayerTest::test_conv2d[ ie_device:CPU - precision:FP16 - params:{'shape': [16, 22, 10, 9], 'ksize': [2, 27, 1, 22], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fa06114e260&gt;, 'padding': 'VALID', 'dilations': [7, 10, 1, 4]} ]
 tensorflow_lite_tests/test_tfl_Conv2D.py::TestTFLiteConv2DLayerTest::test_conv2d[ ie_device:GPU - precision:FP16 - params:{'shape': [16, 9, 15, 6], 'ksize': [13, 6, 16, 18], 'strides': 1, 'padding': 'VALID', 'dilations': [1, 1, 1, 1]} ]
 tensorflow_lite_tests/test_tfl_Conv2D.py::TestTFLiteConv2DLayerTest::test_conv2d[ ie_device:GPU - precision:FP16 - params:{'shape': [21, 14, 21, 8], 'ksize': [8, 26, 4, 3], 'strides': 2, 'padding': 'SAME', 'dilations': [1, 1, 1, 1]} ]
-tensorflow_lite_tests/test_tfl_Conv2D.py::TestTFLiteConv2DLayerTest::test_conv2d[ ie_device:GPU - precision:FP16 - params:{'shape': [16, 22, 10, 9], 'ksize': [2, 27, 1, 22], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fc0223e60a0&gt;, 'padding': 'VALID', 'dilations': [7, 10, 1, 4]} ]
+tensorflow_lite_tests/test_tfl_Conv2D.py::TestTFLiteConv2DLayerTest::test_conv2d[ ie_device:GPU - precision:FP16 - params:{'shape': [21, 13, 20, 20], 'ksize': [7, 30, 22, 6], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fa06114d690&gt;, 'padding': 'SAME', 'dilations': [6, 2, 7, 7]} ]
+tensorflow_lite_tests/test_tfl_Conv2D.py::TestTFLiteConv2DLayerTest::test_conv2d[ ie_device:GPU - precision:FP16 - params:{'shape': [16, 22, 10, 9], 'ksize': [2, 27, 1, 22], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fa06114e260&gt;, 'padding': 'VALID', 'dilations': [7, 10, 1, 4]} ]
+tensorflow_lite_tests/test_tfl_Conv2D.py::TestTFLiteConv2DLayerTest::test_conv2d[ ie_device:CPU - precision:FP32 - params:{'shape': [16, 22, 10, 9], 'ksize': [2, 27, 1, 22], 'strides': &lt;generator object &lt;genexpr&gt; at 0x7fa06114e260&gt;, 'padding': 'VALID', 'dilations': [7, 10, 1, 4]} ]
 tensorflow_lite_tests/test_tfl_Conv2D.py::TestTFLiteConv2DLayerTest::test_conv2d[ ie_device:GPU - precision:FP32 - params:{'shape': [16, 9, 15, 6], 'ksize': [13, 6, 16, 18], 'strides': 1, 'padding': 'VALID', 'dilations': [1, 1, 1, 1]} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'REDUCE_ANY', 'op_func': &lt;function reduce_any at 0x7fc03e02d090&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [1, 7, 8, 5], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'REDUCE_PROD', 'op_func': &lt;function reduce_prod at 0x7fc024549090&gt;, 'kwargs_to_prepare_input': 'short_range', 'shape': [6, 9], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'REDUCE_PROD', 'op_func': &lt;function reduce_prod at 0x7fc024549090&gt;, 'kwargs_to_prepare_input': 'short_range', 'shape': [6, 9], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'REDUCE_MAX', 'op_func': &lt;function reduce_max at 0x7fc024548d30&gt;, 'shape': [1, 7, 8, 5], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'REDUCE_PROD', 'op_func': &lt;function reduce_prod at 0x7fc024549090&gt;, 'kwargs_to_prepare_input': 'short_range', 'shape': [6, 9], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'SUM', 'op_func': &lt;function reduce_sum at 0x7fc024549240&gt;, 'shape': [1, 7, 8, 5], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'REDUCE_MAX', 'op_func': &lt;function reduce_max at 0x7fc024548d30&gt;, 'shape': [1, 7, 8, 5], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'REDUCE_ANY', 'op_func': &lt;function reduce_any at 0x7fc03e02d090&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [1, 7, 8, 5], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'SUM', 'op_func': &lt;function reduce_sum at 0x7fc024549240&gt;, 'shape': [6, 9], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'REDUCE_ALL', 'op_func': &lt;function reduce_all at 0x7fc03e02cc10&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 9], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'REDUCE_ALL', 'op_func': &lt;function reduce_all at 0x7fc03e02cc10&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 9], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'REDUCE_MAX', 'op_func': &lt;function reduce_max at 0x7fc024548d30&gt;, 'shape': [6, 9], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'REDUCE_PROD', 'op_func': &lt;function reduce_prod at 0x7fc024549090&gt;, 'kwargs_to_prepare_input': 'short_range', 'shape': [1, 7, 8, 5], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'REDUCE_ANY', 'op_func': &lt;function reduce_any at 0x7fc03e02d090&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [1, 7, 8, 5], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'SUM', 'op_func': &lt;function reduce_sum at 0x7fc024549240&gt;, 'shape': [6, 9], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'SUM', 'op_func': &lt;function reduce_sum at 0x7fc024549240&gt;, 'shape': [1, 7, 8, 5], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'MEAN', 'op_func': &lt;function reduce_mean at 0x7fc024548e50&gt;, 'shape': [6, 9], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'REDUCE_ALL', 'op_func': &lt;function reduce_all at 0x7fc03e02cc10&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [1, 7, 8, 5], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'REDUCE_MIN', 'op_func': &lt;function reduce_min at 0x7fc024548f70&gt;, 'shape': [1, 7, 8, 5], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'REDUCE_ALL', 'op_func': &lt;function reduce_all at 0x7fc03e02cc10&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [1, 7, 8, 5], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'REDUCE_MIN', 'op_func': &lt;function reduce_min at 0x7fc024548f70&gt;, 'shape': [6, 9], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'MEAN', 'op_func': &lt;function reduce_mean at 0x7fc024548e50&gt;, 'shape': [6, 9], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'SUM', 'op_func': &lt;function reduce_sum at 0x7fc024549240&gt;, 'shape': [1, 7, 8, 5], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'REDUCE_MAX', 'op_func': &lt;function reduce_max at 0x7fc024548d30&gt;, 'shape': [1, 7, 8, 5], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'REDUCE_MIN', 'op_func': &lt;function reduce_min at 0x7fc024548f70&gt;, 'shape': [1, 7, 8, 5], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'MEAN', 'op_func': &lt;function reduce_mean at 0x7fc024548e50&gt;, 'shape': [1, 7, 8, 5], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'REDUCE_ANY', 'op_func': &lt;function reduce_any at 0x7fc03e02d090&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 9], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'REDUCE_ALL', 'op_func': &lt;function reduce_all at 0x7fc03e02cc10&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 9], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'REDUCE_ANY', 'op_func': &lt;function reduce_any at 0x7fc03e02d090&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [1, 7, 8, 5], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'REDUCE_MAX', 'op_func': &lt;function reduce_max at 0x7fc024548d30&gt;, 'shape': [6, 9], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'REDUCE_PROD', 'op_func': &lt;function reduce_prod at 0x7fc024549090&gt;, 'kwargs_to_prepare_input': 'short_range', 'shape': [1, 7, 8, 5], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'REDUCE_PROD', 'op_func': &lt;function reduce_prod at 0x7fc024549090&gt;, 'kwargs_to_prepare_input': 'short_range', 'shape': [1, 7, 8, 5], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'SUM', 'op_func': &lt;function reduce_sum at 0x7fc024549240&gt;, 'shape': [6, 9], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'REDUCE_PROD', 'op_func': &lt;function reduce_prod at 0x7fc024549090&gt;, 'kwargs_to_prepare_input': 'short_range', 'shape': [1, 7, 8, 5], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'REDUCE_ANY', 'op_func': &lt;function reduce_any at 0x7fc03e02d090&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [1, 7, 8, 5], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'REDUCE_ALL', 'op_func': &lt;function reduce_all at 0x7fc03e02cc10&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 9], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'REDUCE_ALL', 'op_func': &lt;function reduce_all at 0x7fc03e02cc10&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [1, 7, 8, 5], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'REDUCE_ANY', 'op_func': &lt;function reduce_any at 0x7fc03e02d090&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 9], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'REDUCE_PROD', 'op_func': &lt;function reduce_prod at 0x7fc024549090&gt;, 'kwargs_to_prepare_input': 'short_range', 'shape': [6, 9], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'MEAN', 'op_func': &lt;function reduce_mean at 0x7fc024548e50&gt;, 'shape': [6, 9], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'REDUCE_MIN', 'op_func': &lt;function reduce_min at 0x7fc024548f70&gt;, 'shape': [6, 9], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'REDUCE_ALL', 'op_func': &lt;function reduce_all at 0x7fc03e02cc10&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 9], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'REDUCE_MAX', 'op_func': &lt;function reduce_max at 0x7fc024548d30&gt;, 'shape': [1, 7, 8, 5], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'REDUCE_PROD', 'op_func': &lt;function reduce_prod at 0x7fc024549090&gt;, 'kwargs_to_prepare_input': 'short_range', 'shape': [6, 9], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'REDUCE_MIN', 'op_func': &lt;function reduce_min at 0x7fc024548f70&gt;, 'shape': [1, 7, 8, 5], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'REDUCE_ANY', 'op_func': &lt;function reduce_any at 0x7fc03e02d090&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 9], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'SUM', 'op_func': &lt;function reduce_sum at 0x7fc024549240&gt;, 'shape': [6, 9], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'MEAN', 'op_func': &lt;function reduce_mean at 0x7fc024548e50&gt;, 'shape': [1, 7, 8, 5], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'REDUCE_MAX', 'op_func': &lt;function reduce_max at 0x7fc024548d30&gt;, 'shape': [1, 7, 8, 5], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'REDUCE_ALL', 'op_func': &lt;function reduce_all at 0x7fc03e02cc10&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [1, 7, 8, 5], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'REDUCE_MIN', 'op_func': &lt;function reduce_min at 0x7fc024548f70&gt;, 'shape': [6, 9], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'REDUCE_PROD', 'op_func': &lt;function reduce_prod at 0x7fc024549090&gt;, 'kwargs_to_prepare_input': 'short_range', 'shape': [1, 7, 8, 5], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'MEAN', 'op_func': &lt;function reduce_mean at 0x7fc024548e50&gt;, 'shape': [1, 7, 8, 5], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'REDUCE_ALL', 'op_func': &lt;function reduce_all at 0x7fc03e02cc10&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 9], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'REDUCE_ALL', 'op_func': &lt;function reduce_all at 0x7fc03e02cc10&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [1, 7, 8, 5], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'REDUCE_ALL', 'op_func': &lt;function reduce_all at 0x7fc03e02cc10&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [1, 7, 8, 5], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'REDUCE_ANY', 'op_func': &lt;function reduce_any at 0x7fc03e02d090&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 9], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'MEAN', 'op_func': &lt;function reduce_mean at 0x7fc024548e50&gt;, 'shape': [6, 9], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'SUM', 'op_func': &lt;function reduce_sum at 0x7fc024549240&gt;, 'shape': [1, 7, 8, 5], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'MEAN', 'op_func': &lt;function reduce_mean at 0x7fc024548e50&gt;, 'shape': [6, 9], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'REDUCE_MIN', 'op_func': &lt;function reduce_min at 0x7fc024548f70&gt;, 'shape': [6, 9], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'REDUCE_ALL', 'op_func': &lt;function reduce_all at 0x7fc03e02cc10&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [1, 7, 8, 5], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'REDUCE_ANY', 'op_func': &lt;function reduce_any at 0x7fc03e02d090&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 9], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'REDUCE_ALL', 'op_func': &lt;function reduce_all at 0x7fc03e02cc10&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 9], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'MEAN', 'op_func': &lt;function reduce_mean at 0x7fc024548e50&gt;, 'shape': [6, 9], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'REDUCE_MAX', 'op_func': &lt;function reduce_max at 0x7fc024548d30&gt;, 'shape': [6, 9], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'REDUCE_MAX', 'op_func': &lt;function reduce_max at 0x7fc024548d30&gt;, 'shape': [6, 9], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'REDUCE_ANY', 'op_func': &lt;function reduce_any at 0x7fc03e02d090&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [1, 7, 8, 5], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'MEAN', 'op_func': &lt;function reduce_mean at 0x7fc024548e50&gt;, 'shape': [1, 7, 8, 5], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'REDUCE_MIN', 'op_func': &lt;function reduce_min at 0x7fc024548f70&gt;, 'shape': [1, 7, 8, 5], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'REDUCE_MIN', 'op_func': &lt;function reduce_min at 0x7fc024548f70&gt;, 'shape': [1, 7, 8, 5], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'SUM', 'op_func': &lt;function reduce_sum at 0x7fc024549240&gt;, 'shape': [6, 9], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'REDUCE_ANY', 'op_func': &lt;function reduce_any at 0x7fc03e02d090&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 9], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'REDUCE_ANY', 'op_func': &lt;function reduce_any at 0x7fc03e02d090&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [1, 7, 8, 5], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'REDUCE_PROD', 'op_func': &lt;function reduce_prod at 0x7fc024549090&gt;, 'kwargs_to_prepare_input': 'short_range', 'shape': [6, 9], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'REDUCE_PROD', 'op_func': &lt;function reduce_prod at 0x7fc024549090&gt;, 'kwargs_to_prepare_input': 'short_range', 'shape': [6, 9], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'REDUCE_PROD', 'op_func': &lt;function reduce_prod at 0x7fc024549090&gt;, 'kwargs_to_prepare_input': 'short_range', 'shape': [1, 7, 8, 5], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'REDUCE_PROD', 'op_func': &lt;function reduce_prod at 0x7fc024549090&gt;, 'kwargs_to_prepare_input': 'short_range', 'shape': [1, 7, 8, 5], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'MEAN', 'op_func': &lt;function reduce_mean at 0x7fc024548e50&gt;, 'shape': [1, 7, 8, 5], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'REDUCE_ANY', 'op_func': &lt;function reduce_any at 0x7fc03e02d090&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 9], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'SUM', 'op_func': &lt;function reduce_sum at 0x7fc024549240&gt;, 'shape': [1, 7, 8, 5], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'MEAN', 'op_func': &lt;function reduce_mean at 0x7fc024548e50&gt;, 'shape': [6, 9], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'REDUCE_MAX', 'op_func': &lt;function reduce_max at 0x7fc024548d30&gt;, 'shape': [6, 9], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'REDUCE_MIN', 'op_func': &lt;function reduce_min at 0x7fc024548f70&gt;, 'shape': [6, 9], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'REDUCE_MIN', 'op_func': &lt;function reduce_min at 0x7fc024548f70&gt;, 'shape': [6, 9], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'MEAN', 'op_func': &lt;function reduce_mean at 0x7fc024548e50&gt;, 'shape': [1, 7, 8, 5], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'REDUCE_ALL', 'op_func': &lt;function reduce_all at 0x7fc03e02cc10&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 9], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'REDUCE_MAX', 'op_func': &lt;function reduce_max at 0x7fc024548d30&gt;, 'shape': [6, 9], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'REDUCE_MIN', 'op_func': &lt;function reduce_min at 0x7fc024548f70&gt;, 'shape': [6, 9], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'SUM', 'op_func': &lt;function reduce_sum at 0x7fc024549240&gt;, 'shape': [1, 7, 8, 5], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'REDUCE_ANY', 'op_func': &lt;function reduce_any at 0x7fc03e02d090&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [1, 7, 8, 5], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'REDUCE_MAX', 'op_func': &lt;function reduce_max at 0x7fc024548d30&gt;, 'shape': [1, 7, 8, 5], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'SUM', 'op_func': &lt;function reduce_sum at 0x7fc024549240&gt;, 'shape': [1, 7, 8, 5], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'SUM', 'op_func': &lt;function reduce_sum at 0x7fc024549240&gt;, 'shape': [6, 9], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'REDUCE_MAX', 'op_func': &lt;function reduce_max at 0x7fc024548d30&gt;, 'shape': [1, 7, 8, 5], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'SUM', 'op_func': &lt;function reduce_sum at 0x7fc024549240&gt;, 'shape': [6, 9], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'REDUCE_ALL', 'op_func': &lt;function reduce_all at 0x7fc03e02cc10&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [1, 7, 8, 5], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'REDUCE_MIN', 'op_func': &lt;function reduce_min at 0x7fc024548f70&gt;, 'shape': [1, 7, 8, 5], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'REDUCE_MAX', 'op_func': &lt;function reduce_max at 0x7fc024548d30&gt;, 'shape': [6, 9], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'REDUCE_MIN', 'op_func': &lt;function reduce_min at 0x7fc024548f70&gt;, 'shape': [1, 7, 8, 5], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'REDUCE_MAX', 'op_func': &lt;function reduce_max at 0x7fc024548d30&gt;, 'shape': [1, 7, 8, 5], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'SUM', 'op_func': &lt;function reduce_sum at 0x7fc024549240&gt;, 'shape': [1, 7, 8, 5], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'REDUCE_ANY', 'op_func': &lt;function reduce_any at 0x7fc03e02d090&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 9], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'REDUCE_MAX', 'op_func': &lt;function reduce_max at 0x7fc024548d30&gt;, 'shape': [6, 9], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'SUM', 'op_func': &lt;function reduce_sum at 0x7fc024549240&gt;, 'shape': [6, 9], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'REDUCE_MIN', 'op_func': &lt;function reduce_min at 0x7fc024548f70&gt;, 'shape': [6, 9], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'MEAN', 'op_func': &lt;function reduce_mean at 0x7fc024548e50&gt;, 'shape': [1, 7, 8, 5], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'MEAN', 'op_func': &lt;function reduce_mean at 0x7fc024548e50&gt;, 'shape': [6, 9], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'REDUCE_PROD', 'op_func': &lt;function reduce_prod at 0x7fc024549090&gt;, 'kwargs_to_prepare_input': 'short_range', 'shape': [6, 9], 'axis': -1} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'REDUCE_PROD', 'op_func': &lt;function reduce_prod at 0x7fc024549090&gt;, 'kwargs_to_prepare_input': 'short_range', 'shape': [1, 7, 8, 5], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'REDUCE_MIN', 'op_func': &lt;function reduce_min at 0x7fc024548f70&gt;, 'shape': [1, 7, 8, 5], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'MEAN', 'op_func': &lt;function reduce_mean at 0x7fc024548e50&gt;, 'shape': [1, 7, 8, 5], 'axis': None} ]
-tensorflow_lite_tests/test_tfl_BatchMatmul.py::TestTFLiteBatchMatmulLayerTest::test_batch_matmul[ ie_device:CPU - precision:FP16 - params:{'shapes': (&lt;generator object &lt;genexpr&gt; at 0x7fc0224d0eb0&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fc0224d0f20&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fc0224d0f90&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fc0224d1000&gt;), 'adjoint_a': False, 'adjoint_b': False} ]
-tensorflow_lite_tests/test_tfl_BatchMatmul.py::TestTFLiteBatchMatmulLayerTest::test_batch_matmul[ ie_device:GPU - precision:FP32 - params:{'shapes': (&lt;generator object &lt;genexpr&gt; at 0x7fc0224d1070&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fc0224d10e0&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fc0224d1150&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fc0224d11c0&gt;), 'adjoint_a': True, 'adjoint_b': True} ]
-tensorflow_lite_tests/test_tfl_BatchMatmul.py::TestTFLiteBatchMatmulLayerTest::test_batch_matmul[ ie_device:CPU - precision:FP32 - params:{'shapes': (&lt;generator object &lt;genexpr&gt; at 0x7fc0224d0eb0&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fc0224d0f20&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fc0224d0f90&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fc0224d1000&gt;), 'adjoint_a': False, 'adjoint_b': False} ]
-tensorflow_lite_tests/test_tfl_BatchMatmul.py::TestTFLiteBatchMatmulLayerTest::test_batch_matmul[ ie_device:GPU - precision:FP16 - params:{'shapes': (&lt;generator object &lt;genexpr&gt; at 0x7fc0224d1230&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fc0224d12a0&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fc0224d1310&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fc0224d1380&gt;), 'adjoint_a': False, 'adjoint_b': False} ]
-tensorflow_lite_tests/test_tfl_BatchMatmul.py::TestTFLiteBatchMatmulLayerTest::test_batch_matmul[ ie_device:GPU - precision:FP32 - params:{'shapes': (&lt;generator object &lt;genexpr&gt; at 0x7fc0224d0eb0&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fc0224d0f20&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fc0224d0f90&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fc0224d1000&gt;), 'adjoint_a': False, 'adjoint_b': False} ]
-tensorflow_lite_tests/test_tfl_BatchMatmul.py::TestTFLiteBatchMatmulLayerTest::test_batch_matmul[ ie_device:CPU - precision:FP16 - params:{'shapes': (&lt;generator object &lt;genexpr&gt; at 0x7fc0224d1230&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fc0224d12a0&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fc0224d1310&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fc0224d1380&gt;), 'adjoint_a': False, 'adjoint_b': False} ]
-tensorflow_lite_tests/test_tfl_BatchMatmul.py::TestTFLiteBatchMatmulLayerTest::test_batch_matmul[ ie_device:CPU - precision:FP16 - params:{'shapes': (&lt;generator object &lt;genexpr&gt; at 0x7fc0224d1070&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fc0224d10e0&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fc0224d1150&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fc0224d11c0&gt;), 'adjoint_a': True, 'adjoint_b': True} ]
-tensorflow_lite_tests/test_tfl_BatchMatmul.py::TestTFLiteBatchMatmulLayerTest::test_batch_matmul[ ie_device:GPU - precision:FP32 - params:{'shapes': (&lt;generator object &lt;genexpr&gt; at 0x7fc0224d1230&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fc0224d12a0&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fc0224d1310&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fc0224d1380&gt;), 'adjoint_a': False, 'adjoint_b': False} ]
-tensorflow_lite_tests/test_tfl_BatchMatmul.py::TestTFLiteBatchMatmulLayerTest::test_batch_matmul[ ie_device:GPU - precision:FP16 - params:{'shapes': (&lt;generator object &lt;genexpr&gt; at 0x7fc0224d0eb0&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fc0224d0f20&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fc0224d0f90&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fc0224d1000&gt;), 'adjoint_a': False, 'adjoint_b': False} ]
-tensorflow_lite_tests/test_tfl_BatchMatmul.py::TestTFLiteBatchMatmulLayerTest::test_batch_matmul[ ie_device:GPU - precision:FP16 - params:{'shapes': (&lt;generator object &lt;genexpr&gt; at 0x7fc0224d1070&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fc0224d10e0&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fc0224d1150&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fc0224d11c0&gt;), 'adjoint_a': True, 'adjoint_b': True} ]
-tensorflow_lite_tests/test_tfl_BatchMatmul.py::TestTFLiteBatchMatmulLayerTest::test_batch_matmul[ ie_device:CPU - precision:FP32 - params:{'shapes': (&lt;generator object &lt;genexpr&gt; at 0x7fc0224d1230&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fc0224d12a0&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fc0224d1310&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fc0224d1380&gt;), 'adjoint_a': False, 'adjoint_b': False} ]
-tensorflow_lite_tests/test_tfl_BatchMatmul.py::TestTFLiteBatchMatmulLayerTest::test_batch_matmul[ ie_device:CPU - precision:FP32 - params:{'shapes': (&lt;generator object &lt;genexpr&gt; at 0x7fc0224d1070&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fc0224d10e0&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fc0224d1150&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fc0224d11c0&gt;), 'adjoint_a': True, 'adjoint_b': True} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'REDUCE_ALL', 'op_func': &lt;function reduce_all at 0x7fa07cdd8c10&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 9], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'REDUCE_ALL', 'op_func': &lt;function reduce_all at 0x7fa07cdd8c10&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [1, 7, 8, 5], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'REDUCE_ALL', 'op_func': &lt;function reduce_all at 0x7fa07cdd8c10&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [1, 7, 8, 5], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'MEAN', 'op_func': &lt;function reduce_mean at 0x7fa06308ce50&gt;, 'shape': [6, 9], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'REDUCE_PROD', 'op_func': &lt;function reduce_prod at 0x7fa06308d090&gt;, 'kwargs_to_prepare_input': 'short_range', 'shape': [6, 9], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'REDUCE_ANY', 'op_func': &lt;function reduce_any at 0x7fa07cdd9090&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 9], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'REDUCE_MIN', 'op_func': &lt;function reduce_min at 0x7fa06308cf70&gt;, 'shape': [1, 7, 8, 5], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'REDUCE_MIN', 'op_func': &lt;function reduce_min at 0x7fa06308cf70&gt;, 'shape': [6, 9], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'MEAN', 'op_func': &lt;function reduce_mean at 0x7fa06308ce50&gt;, 'shape': [1, 7, 8, 5], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'SUM', 'op_func': &lt;function reduce_sum at 0x7fa06308d240&gt;, 'shape': [6, 9], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'MEAN', 'op_func': &lt;function reduce_mean at 0x7fa06308ce50&gt;, 'shape': [6, 9], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'REDUCE_MAX', 'op_func': &lt;function reduce_max at 0x7fa06308cd30&gt;, 'shape': [6, 9], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'REDUCE_MIN', 'op_func': &lt;function reduce_min at 0x7fa06308cf70&gt;, 'shape': [1, 7, 8, 5], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'REDUCE_ANY', 'op_func': &lt;function reduce_any at 0x7fa07cdd9090&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [1, 7, 8, 5], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'MEAN', 'op_func': &lt;function reduce_mean at 0x7fa06308ce50&gt;, 'shape': [6, 9], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'SUM', 'op_func': &lt;function reduce_sum at 0x7fa06308d240&gt;, 'shape': [6, 9], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'REDUCE_ANY', 'op_func': &lt;function reduce_any at 0x7fa07cdd9090&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [1, 7, 8, 5], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'REDUCE_ANY', 'op_func': &lt;function reduce_any at 0x7fa07cdd9090&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [1, 7, 8, 5], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'MEAN', 'op_func': &lt;function reduce_mean at 0x7fa06308ce50&gt;, 'shape': [1, 7, 8, 5], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'REDUCE_MAX', 'op_func': &lt;function reduce_max at 0x7fa06308cd30&gt;, 'shape': [6, 9], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'MEAN', 'op_func': &lt;function reduce_mean at 0x7fa06308ce50&gt;, 'shape': [1, 7, 8, 5], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'REDUCE_MAX', 'op_func': &lt;function reduce_max at 0x7fa06308cd30&gt;, 'shape': [1, 7, 8, 5], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'REDUCE_PROD', 'op_func': &lt;function reduce_prod at 0x7fa06308d090&gt;, 'kwargs_to_prepare_input': 'short_range', 'shape': [1, 7, 8, 5], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'REDUCE_MIN', 'op_func': &lt;function reduce_min at 0x7fa06308cf70&gt;, 'shape': [1, 7, 8, 5], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'REDUCE_MAX', 'op_func': &lt;function reduce_max at 0x7fa06308cd30&gt;, 'shape': [1, 7, 8, 5], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'SUM', 'op_func': &lt;function reduce_sum at 0x7fa06308d240&gt;, 'shape': [1, 7, 8, 5], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'REDUCE_MAX', 'op_func': &lt;function reduce_max at 0x7fa06308cd30&gt;, 'shape': [1, 7, 8, 5], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'SUM', 'op_func': &lt;function reduce_sum at 0x7fa06308d240&gt;, 'shape': [1, 7, 8, 5], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'REDUCE_ALL', 'op_func': &lt;function reduce_all at 0x7fa07cdd8c10&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [1, 7, 8, 5], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'REDUCE_MIN', 'op_func': &lt;function reduce_min at 0x7fa06308cf70&gt;, 'shape': [1, 7, 8, 5], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'REDUCE_PROD', 'op_func': &lt;function reduce_prod at 0x7fa06308d090&gt;, 'kwargs_to_prepare_input': 'short_range', 'shape': [6, 9], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'REDUCE_ALL', 'op_func': &lt;function reduce_all at 0x7fa07cdd8c10&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [1, 7, 8, 5], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'SUM', 'op_func': &lt;function reduce_sum at 0x7fa06308d240&gt;, 'shape': [6, 9], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'SUM', 'op_func': &lt;function reduce_sum at 0x7fa06308d240&gt;, 'shape': [1, 7, 8, 5], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'SUM', 'op_func': &lt;function reduce_sum at 0x7fa06308d240&gt;, 'shape': [6, 9], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'REDUCE_ALL', 'op_func': &lt;function reduce_all at 0x7fa07cdd8c10&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 9], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'SUM', 'op_func': &lt;function reduce_sum at 0x7fa06308d240&gt;, 'shape': [1, 7, 8, 5], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'SUM', 'op_func': &lt;function reduce_sum at 0x7fa06308d240&gt;, 'shape': [6, 9], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'SUM', 'op_func': &lt;function reduce_sum at 0x7fa06308d240&gt;, 'shape': [6, 9], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'REDUCE_ANY', 'op_func': &lt;function reduce_any at 0x7fa07cdd9090&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 9], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'SUM', 'op_func': &lt;function reduce_sum at 0x7fa06308d240&gt;, 'shape': [1, 7, 8, 5], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'REDUCE_ALL', 'op_func': &lt;function reduce_all at 0x7fa07cdd8c10&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [1, 7, 8, 5], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'SUM', 'op_func': &lt;function reduce_sum at 0x7fa06308d240&gt;, 'shape': [1, 7, 8, 5], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'REDUCE_ANY', 'op_func': &lt;function reduce_any at 0x7fa07cdd9090&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 9], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'REDUCE_ANY', 'op_func': &lt;function reduce_any at 0x7fa07cdd9090&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [1, 7, 8, 5], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'MEAN', 'op_func': &lt;function reduce_mean at 0x7fa06308ce50&gt;, 'shape': [1, 7, 8, 5], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'REDUCE_ALL', 'op_func': &lt;function reduce_all at 0x7fa07cdd8c10&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 9], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'REDUCE_MIN', 'op_func': &lt;function reduce_min at 0x7fa06308cf70&gt;, 'shape': [6, 9], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'REDUCE_ALL', 'op_func': &lt;function reduce_all at 0x7fa07cdd8c10&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 9], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'REDUCE_MAX', 'op_func': &lt;function reduce_max at 0x7fa06308cd30&gt;, 'shape': [6, 9], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'MEAN', 'op_func': &lt;function reduce_mean at 0x7fa06308ce50&gt;, 'shape': [1, 7, 8, 5], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'REDUCE_PROD', 'op_func': &lt;function reduce_prod at 0x7fa06308d090&gt;, 'kwargs_to_prepare_input': 'short_range', 'shape': [1, 7, 8, 5], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'REDUCE_MAX', 'op_func': &lt;function reduce_max at 0x7fa06308cd30&gt;, 'shape': [1, 7, 8, 5], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'MEAN', 'op_func': &lt;function reduce_mean at 0x7fa06308ce50&gt;, 'shape': [1, 7, 8, 5], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'REDUCE_PROD', 'op_func': &lt;function reduce_prod at 0x7fa06308d090&gt;, 'kwargs_to_prepare_input': 'short_range', 'shape': [6, 9], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'REDUCE_MIN', 'op_func': &lt;function reduce_min at 0x7fa06308cf70&gt;, 'shape': [6, 9], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'REDUCE_MAX', 'op_func': &lt;function reduce_max at 0x7fa06308cd30&gt;, 'shape': [1, 7, 8, 5], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'REDUCE_PROD', 'op_func': &lt;function reduce_prod at 0x7fa06308d090&gt;, 'kwargs_to_prepare_input': 'short_range', 'shape': [1, 7, 8, 5], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'SUM', 'op_func': &lt;function reduce_sum at 0x7fa06308d240&gt;, 'shape': [1, 7, 8, 5], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'REDUCE_MAX', 'op_func': &lt;function reduce_max at 0x7fa06308cd30&gt;, 'shape': [6, 9], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'REDUCE_MAX', 'op_func': &lt;function reduce_max at 0x7fa06308cd30&gt;, 'shape': [6, 9], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'REDUCE_ALL', 'op_func': &lt;function reduce_all at 0x7fa07cdd8c10&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [1, 7, 8, 5], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'REDUCE_MIN', 'op_func': &lt;function reduce_min at 0x7fa06308cf70&gt;, 'shape': [6, 9], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'MEAN', 'op_func': &lt;function reduce_mean at 0x7fa06308ce50&gt;, 'shape': [1, 7, 8, 5], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'MEAN', 'op_func': &lt;function reduce_mean at 0x7fa06308ce50&gt;, 'shape': [6, 9], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'REDUCE_ANY', 'op_func': &lt;function reduce_any at 0x7fa07cdd9090&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [1, 7, 8, 5], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'REDUCE_ALL', 'op_func': &lt;function reduce_all at 0x7fa07cdd8c10&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 9], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'REDUCE_ANY', 'op_func': &lt;function reduce_any at 0x7fa07cdd9090&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [1, 7, 8, 5], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'REDUCE_MIN', 'op_func': &lt;function reduce_min at 0x7fa06308cf70&gt;, 'shape': [1, 7, 8, 5], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'REDUCE_PROD', 'op_func': &lt;function reduce_prod at 0x7fa06308d090&gt;, 'kwargs_to_prepare_input': 'short_range', 'shape': [1, 7, 8, 5], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'REDUCE_ANY', 'op_func': &lt;function reduce_any at 0x7fa07cdd9090&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [1, 7, 8, 5], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'REDUCE_PROD', 'op_func': &lt;function reduce_prod at 0x7fa06308d090&gt;, 'kwargs_to_prepare_input': 'short_range', 'shape': [6, 9], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'MEAN', 'op_func': &lt;function reduce_mean at 0x7fa06308ce50&gt;, 'shape': [1, 7, 8, 5], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'REDUCE_ANY', 'op_func': &lt;function reduce_any at 0x7fa07cdd9090&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 9], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'REDUCE_ALL', 'op_func': &lt;function reduce_all at 0x7fa07cdd8c10&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 9], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'REDUCE_MIN', 'op_func': &lt;function reduce_min at 0x7fa06308cf70&gt;, 'shape': [1, 7, 8, 5], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'REDUCE_PROD', 'op_func': &lt;function reduce_prod at 0x7fa06308d090&gt;, 'kwargs_to_prepare_input': 'short_range', 'shape': [6, 9], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'REDUCE_ALL', 'op_func': &lt;function reduce_all at 0x7fa07cdd8c10&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [1, 7, 8, 5], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'REDUCE_MIN', 'op_func': &lt;function reduce_min at 0x7fa06308cf70&gt;, 'shape': [6, 9], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'REDUCE_MAX', 'op_func': &lt;function reduce_max at 0x7fa06308cd30&gt;, 'shape': [6, 9], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'MEAN', 'op_func': &lt;function reduce_mean at 0x7fa06308ce50&gt;, 'shape': [6, 9], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'SUM', 'op_func': &lt;function reduce_sum at 0x7fa06308d240&gt;, 'shape': [6, 9], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'REDUCE_PROD', 'op_func': &lt;function reduce_prod at 0x7fa06308d090&gt;, 'kwargs_to_prepare_input': 'short_range', 'shape': [1, 7, 8, 5], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'SUM', 'op_func': &lt;function reduce_sum at 0x7fa06308d240&gt;, 'shape': [1, 7, 8, 5], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'REDUCE_MIN', 'op_func': &lt;function reduce_min at 0x7fa06308cf70&gt;, 'shape': [6, 9], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'REDUCE_MAX', 'op_func': &lt;function reduce_max at 0x7fa06308cd30&gt;, 'shape': [6, 9], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'REDUCE_MIN', 'op_func': &lt;function reduce_min at 0x7fa06308cf70&gt;, 'shape': [1, 7, 8, 5], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'REDUCE_MIN', 'op_func': &lt;function reduce_min at 0x7fa06308cf70&gt;, 'shape': [1, 7, 8, 5], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'MEAN', 'op_func': &lt;function reduce_mean at 0x7fa06308ce50&gt;, 'shape': [6, 9], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'REDUCE_PROD', 'op_func': &lt;function reduce_prod at 0x7fa06308d090&gt;, 'kwargs_to_prepare_input': 'short_range', 'shape': [6, 9], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'MEAN', 'op_func': &lt;function reduce_mean at 0x7fa06308ce50&gt;, 'shape': [6, 9], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'REDUCE_PROD', 'op_func': &lt;function reduce_prod at 0x7fa06308d090&gt;, 'kwargs_to_prepare_input': 'short_range', 'shape': [6, 9], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'REDUCE_PROD', 'op_func': &lt;function reduce_prod at 0x7fa06308d090&gt;, 'kwargs_to_prepare_input': 'short_range', 'shape': [1, 7, 8, 5], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'REDUCE_ALL', 'op_func': &lt;function reduce_all at 0x7fa07cdd8c10&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [1, 7, 8, 5], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'REDUCE_MAX', 'op_func': &lt;function reduce_max at 0x7fa06308cd30&gt;, 'shape': [1, 7, 8, 5], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'REDUCE_MAX', 'op_func': &lt;function reduce_max at 0x7fa06308cd30&gt;, 'shape': [1, 7, 8, 5], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'REDUCE_PROD', 'op_func': &lt;function reduce_prod at 0x7fa06308d090&gt;, 'kwargs_to_prepare_input': 'short_range', 'shape': [1, 7, 8, 5], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'REDUCE_PROD', 'op_func': &lt;function reduce_prod at 0x7fa06308d090&gt;, 'kwargs_to_prepare_input': 'short_range', 'shape': [6, 9], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'REDUCE_MIN', 'op_func': &lt;function reduce_min at 0x7fa06308cf70&gt;, 'shape': [6, 9], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'REDUCE_MAX', 'op_func': &lt;function reduce_max at 0x7fa06308cd30&gt;, 'shape': [1, 7, 8, 5], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'REDUCE_MAX', 'op_func': &lt;function reduce_max at 0x7fa06308cd30&gt;, 'shape': [6, 9], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'REDUCE_ALL', 'op_func': &lt;function reduce_all at 0x7fa07cdd8c10&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 9], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'SUM', 'op_func': &lt;function reduce_sum at 0x7fa06308d240&gt;, 'shape': [6, 9], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'REDUCE_ANY', 'op_func': &lt;function reduce_any at 0x7fa07cdd9090&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [1, 7, 8, 5], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'REDUCE_MIN', 'op_func': &lt;function reduce_min at 0x7fa06308cf70&gt;, 'shape': [6, 9], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'REDUCE_ANY', 'op_func': &lt;function reduce_any at 0x7fa07cdd9090&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 9], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP16 - params:{'op_name': 'REDUCE_PROD', 'op_func': &lt;function reduce_prod at 0x7fa06308d090&gt;, 'kwargs_to_prepare_input': 'short_range', 'shape': [1, 7, 8, 5], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'REDUCE_ANY', 'op_func': &lt;function reduce_any at 0x7fa07cdd9090&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 9], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'REDUCE_ANY', 'op_func': &lt;function reduce_any at 0x7fa07cdd9090&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 9], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP32 - params:{'op_name': 'REDUCE_ANY', 'op_func': &lt;function reduce_any at 0x7fa07cdd9090&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 9], 'axis': None} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:GPU - precision:FP16 - params:{'op_name': 'MEAN', 'op_func': &lt;function reduce_mean at 0x7fa06308ce50&gt;, 'shape': [6, 9], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_Reduce.py::TestTFLiteReduceLayerTest::test_reduce[ ie_device:CPU - precision:FP32 - params:{'op_name': 'REDUCE_ALL', 'op_func': &lt;function reduce_all at 0x7fa07cdd8c10&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 9], 'axis': -1} ]
+tensorflow_lite_tests/test_tfl_BatchMatmul.py::TestTFLiteBatchMatmulLayerTest::test_batch_matmul[ ie_device:CPU - precision:FP16 - params:{'shapes': (&lt;generator object &lt;genexpr&gt; at 0x7fa061234eb0&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fa061234f20&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fa061234f90&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fa061235000&gt;), 'adjoint_a': False, 'adjoint_b': False} ]
+tensorflow_lite_tests/test_tfl_BatchMatmul.py::TestTFLiteBatchMatmulLayerTest::test_batch_matmul[ ie_device:CPU - precision:FP16 - params:{'shapes': (&lt;generator object &lt;genexpr&gt; at 0x7fa061235070&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fa0612350e0&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fa061235150&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fa0612351c0&gt;), 'adjoint_a': True, 'adjoint_b': True} ]
+tensorflow_lite_tests/test_tfl_BatchMatmul.py::TestTFLiteBatchMatmulLayerTest::test_batch_matmul[ ie_device:GPU - precision:FP32 - params:{'shapes': (&lt;generator object &lt;genexpr&gt; at 0x7fa061235070&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fa0612350e0&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fa061235150&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fa0612351c0&gt;), 'adjoint_a': True, 'adjoint_b': True} ]
+tensorflow_lite_tests/test_tfl_BatchMatmul.py::TestTFLiteBatchMatmulLayerTest::test_batch_matmul[ ie_device:GPU - precision:FP16 - params:{'shapes': (&lt;generator object &lt;genexpr&gt; at 0x7fa061235230&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fa0612352a0&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fa061235310&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fa061235380&gt;), 'adjoint_a': False, 'adjoint_b': False} ]
+tensorflow_lite_tests/test_tfl_BatchMatmul.py::TestTFLiteBatchMatmulLayerTest::test_batch_matmul[ ie_device:GPU - precision:FP32 - params:{'shapes': (&lt;generator object &lt;genexpr&gt; at 0x7fa061234eb0&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fa061234f20&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fa061234f90&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fa061235000&gt;), 'adjoint_a': False, 'adjoint_b': False} ]
+tensorflow_lite_tests/test_tfl_BatchMatmul.py::TestTFLiteBatchMatmulLayerTest::test_batch_matmul[ ie_device:CPU - precision:FP32 - params:{'shapes': (&lt;generator object &lt;genexpr&gt; at 0x7fa061234eb0&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fa061234f20&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fa061234f90&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fa061235000&gt;), 'adjoint_a': False, 'adjoint_b': False} ]
+tensorflow_lite_tests/test_tfl_BatchMatmul.py::TestTFLiteBatchMatmulLayerTest::test_batch_matmul[ ie_device:GPU - precision:FP16 - params:{'shapes': (&lt;generator object &lt;genexpr&gt; at 0x7fa061234eb0&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fa061234f20&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fa061234f90&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fa061235000&gt;), 'adjoint_a': False, 'adjoint_b': False} ]
+tensorflow_lite_tests/test_tfl_BatchMatmul.py::TestTFLiteBatchMatmulLayerTest::test_batch_matmul[ ie_device:CPU - precision:FP32 - params:{'shapes': (&lt;generator object &lt;genexpr&gt; at 0x7fa061235230&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fa0612352a0&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fa061235310&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fa061235380&gt;), 'adjoint_a': False, 'adjoint_b': False} ]
+tensorflow_lite_tests/test_tfl_BatchMatmul.py::TestTFLiteBatchMatmulLayerTest::test_batch_matmul[ ie_device:GPU - precision:FP32 - params:{'shapes': (&lt;generator object &lt;genexpr&gt; at 0x7fa061235230&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fa0612352a0&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fa061235310&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fa061235380&gt;), 'adjoint_a': False, 'adjoint_b': False} ]
+tensorflow_lite_tests/test_tfl_BatchMatmul.py::TestTFLiteBatchMatmulLayerTest::test_batch_matmul[ ie_device:CPU - precision:FP16 - params:{'shapes': (&lt;generator object &lt;genexpr&gt; at 0x7fa061235230&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fa0612352a0&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fa061235310&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fa061235380&gt;), 'adjoint_a': False, 'adjoint_b': False} ]
+tensorflow_lite_tests/test_tfl_BatchMatmul.py::TestTFLiteBatchMatmulLayerTest::test_batch_matmul[ ie_device:GPU - precision:FP16 - params:{'shapes': (&lt;generator object &lt;genexpr&gt; at 0x7fa061235070&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fa0612350e0&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fa061235150&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fa0612351c0&gt;), 'adjoint_a': True, 'adjoint_b': True} ]
+tensorflow_lite_tests/test_tfl_BatchMatmul.py::TestTFLiteBatchMatmulLayerTest::test_batch_matmul[ ie_device:CPU - precision:FP32 - params:{'shapes': (&lt;generator object &lt;genexpr&gt; at 0x7fa061235070&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fa0612350e0&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fa061235150&gt;, &lt;generator object &lt;genexpr&gt; at 0x7fa0612351c0&gt;), 'adjoint_a': True, 'adjoint_b': True} ]
 tensorflow_lite_tests/test_tfl_SplitV.py::TestTFLiteSplitLayerTest::test_split_v[ ie_device:CPU - precision:FP32 - params:{'shape': [4, 3, 3, 1], 'num_or_size_splits': [0, 1, 4, -1, -1, -1], 'axis': 1} ]
 tensorflow_lite_tests/test_tfl_SplitV.py::TestTFLiteSplitLayerTest::test_split_v[ ie_device:GPU - precision:FP16 - params:{'shape': [4, 3, 3, 1], 'num_or_size_splits': [0, 1, 4, -1, -1, -1], 'axis': 1} ]
 tensorflow_lite_tests/test_tfl_SplitV.py::TestTFLiteSplitLayerTest::test_split_v[ ie_device:CPU - precision:FP32 - params:{'shape': [1], 'num_or_size_splits': [2, 1, 1, 4], 'axis': 0} ]
@@ -882,182 +882,182 @@

 tensorflow_lite_tests/test_tfl_ScatterND.py::TestTFLiteScatterNDLayerTest::test_scatter_nd[ ie_device:GPU - precision:FP16 - params:{'indices_shape': [1, 8], 'indices_value': [2, 7, 5, 10], 'updates_dtype': &lt;class 'numpy.int32'&gt;, 'updates_shape': [1], 'shape_shape': [2], 'shape_value': [8]} ]
 tensorflow_lite_tests/test_tfl_ScatterND.py::TestTFLiteScatterNDLayerTest::test_scatter_nd[ ie_device:GPU - precision:FP32 - params:{'indices_shape': [5, 10], 'indices_value': [9, 10, 7, 1], 'updates_dtype': &lt;class 'numpy.int64'&gt;, 'updates_shape': [10], 'shape_shape': [6], 'shape_value': [2]} ]
 tensorflow_lite_tests/test_tfl_ScatterND.py::TestTFLiteScatterNDLayerTest::test_scatter_nd[ ie_device:CPU - precision:FP32 - params:{'indices_shape': [2, 8], 'indices_value': [2, 6, 4, 5], 'updates_dtype': &lt;class 'bool'&gt;, 'updates_shape': [4], 'shape_shape': [3], 'shape_value': [5]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'RSQRT', 'op_func': &lt;function rsqrt at 0x7fc02452a830&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'LOGICAL_NOT', 'op_func': &lt;function logical_not at 0x7fc03e5fdb40&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'SQUARE', 'op_func': &lt;function square at 0x7fc02452b520&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'RSQRT', 'op_func': &lt;function rsqrt at 0x7fc02452a830&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'RSQRT', 'op_func': &lt;function rsqrt at 0x7fc02452a830&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'EXP', 'op_func': &lt;function exp at 0x7fc02452a7a0&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'CEIL', 'op_func': &lt;function ceil at 0x7fc02452a680&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'CAST', 'op_func': functools.partial(&lt;function cast at 0x7fc03e1f1750&gt;, dtype=tf.int32), 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'EXP', 'op_func': &lt;function exp at 0x7fc02452a7a0&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'NEG', 'op_func': &lt;function neg at 0x7fc02452b250&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'LOG', 'op_func': &lt;function log at 0x7fc02452b130&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'SQRT', 'op_func': &lt;function sqrt at 0x7fc02452a710&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'LOGISTIC', 'op_func': &lt;function sigmoid at 0x7fc02452a290&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'LOG_SOFTMAX', 'op_func': functools.partial(&lt;function log_softmax_v2 at 0x7fc02452bbe0&gt;, axis=-1), 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'SOFTMAX', 'op_func': functools.partial(&lt;function softmax_v2 at 0x7fc03d59ab00&gt;, axis=-1), 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'CAST', 'op_func': functools.partial(&lt;function cast at 0x7fc03e1f1750&gt;, dtype=tf.int32), 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'ELU', 'op_func': &lt;function elu at 0x7fc03e1272e0&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'SIN', 'op_func': &lt;function sin at 0x7fc02452b400&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'SQUARE', 'op_func': &lt;function square at 0x7fc02452b520&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'RELU6', 'op_func': &lt;function relu6 at 0x7fc02452b9a0&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'SIN', 'op_func': &lt;function sin at 0x7fc02452b400&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'RSQRT', 'op_func': &lt;function rsqrt at 0x7fc02452a830&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'LOG', 'op_func': &lt;function log at 0x7fc02452b130&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'ELU', 'op_func': &lt;function elu at 0x7fc03e1272e0&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'CEIL', 'op_func': &lt;function ceil at 0x7fc02452a680&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'ABS', 'op_func': &lt;function abs at 0x7fc024529ea0&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'SQRT', 'op_func': &lt;function sqrt at 0x7fc02452a710&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'RELU', 'op_func': &lt;function relu at 0x7fc03e1b70a0&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'ROUND', 'op_func': &lt;function round at 0x7fc02452a200&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'CAST', 'op_func': functools.partial(&lt;function cast at 0x7fc03e1f1750&gt;, dtype=tf.int32), 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'SQUARE', 'op_func': &lt;function square at 0x7fc02452b520&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'LEAKY_RELU', 'op_func': functools.partial(&lt;function leaky_relu at 0x7fc02452ba30&gt;, alpha=-0.5), 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'TANH', 'op_func': &lt;function tanh at 0x7fc02452b640&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'EXP', 'op_func': &lt;function exp at 0x7fc02452a7a0&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'TANH', 'op_func': &lt;function tanh at 0x7fc02452b640&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'SQRT', 'op_func': &lt;function sqrt at 0x7fc02452a710&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'CAST', 'op_func': functools.partial(&lt;function cast at 0x7fc03e1f1750&gt;, dtype=tf.int32), 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'RELU', 'op_func': &lt;function relu at 0x7fc03e1b70a0&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'ELU', 'op_func': &lt;function elu at 0x7fc03e1272e0&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'COS', 'op_func': &lt;function cos at 0x7fc02452ad40&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'ABS', 'op_func': &lt;function abs at 0x7fc024529ea0&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'NEG', 'op_func': &lt;function neg at 0x7fc02452b250&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'ABS', 'op_func': &lt;function abs at 0x7fc024529ea0&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'RELU', 'op_func': &lt;function relu at 0x7fc03e1b70a0&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'SIN', 'op_func': &lt;function sin at 0x7fc02452b400&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'RELU', 'op_func': &lt;function relu at 0x7fc03e1b70a0&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'TANH', 'op_func': &lt;function tanh at 0x7fc02452b640&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'SOFTMAX', 'op_func': functools.partial(&lt;function softmax_v2 at 0x7fc03d59ab00&gt;, axis=-1), 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'EXP', 'op_func': &lt;function exp at 0x7fc02452a7a0&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'TANH', 'op_func': &lt;function tanh at 0x7fc02452b640&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'RELU6', 'op_func': &lt;function relu6 at 0x7fc02452b9a0&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'LOGICAL_NOT', 'op_func': &lt;function logical_not at 0x7fc03e5fdb40&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'TANH', 'op_func': &lt;function tanh at 0x7fc02452b640&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'LOGISTIC', 'op_func': &lt;function sigmoid at 0x7fc02452a290&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'ROUND', 'op_func': &lt;function round at 0x7fc02452a200&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'ROUND', 'op_func': &lt;function round at 0x7fc02452a200&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'RELU', 'op_func': &lt;function relu at 0x7fc03e1b70a0&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'ABS', 'op_func': &lt;function abs at 0x7fc024529ea0&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'NEG', 'op_func': &lt;function neg at 0x7fc02452b250&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'EXP', 'op_func': &lt;function exp at 0x7fc02452a7a0&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'NEG', 'op_func': &lt;function neg at 0x7fc02452b250&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'RSQRT', 'op_func': &lt;function rsqrt at 0x7fc02452a830&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'LEAKY_RELU', 'op_func': functools.partial(&lt;function leaky_relu at 0x7fc02452ba30&gt;, alpha=-0.5), 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'EXP', 'op_func': &lt;function exp at 0x7fc02452a7a0&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'CAST', 'op_func': functools.partial(&lt;function cast at 0x7fc03e1f1750&gt;, dtype=tf.int32), 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'LEAKY_RELU', 'op_func': functools.partial(&lt;function leaky_relu at 0x7fc02452ba30&gt;, alpha=-0.5), 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'LOG', 'op_func': &lt;function log at 0x7fc02452b130&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'LOGISTIC', 'op_func': &lt;function sigmoid at 0x7fc02452a290&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'COS', 'op_func': &lt;function cos at 0x7fc02452ad40&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'FLOOR', 'op_func': &lt;function floor at 0x7fc02452a950&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'SQUARE', 'op_func': &lt;function square at 0x7fc02452b520&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'LOG', 'op_func': &lt;function log at 0x7fc02452b130&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'LOG_SOFTMAX', 'op_func': functools.partial(&lt;function log_softmax_v2 at 0x7fc02452bbe0&gt;, axis=-1), 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'RSQRT', 'op_func': &lt;function rsqrt at 0x7fc02452a830&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'LOG', 'op_func': &lt;function log at 0x7fc02452b130&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'LOG_SOFTMAX', 'op_func': functools.partial(&lt;function log_softmax_v2 at 0x7fc02452bbe0&gt;, axis=-1), 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'SIN', 'op_func': &lt;function sin at 0x7fc02452b400&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'LOGICAL_NOT', 'op_func': &lt;function logical_not at 0x7fc03e5fdb40&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'LOGISTIC', 'op_func': &lt;function sigmoid at 0x7fc02452a290&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'SQUARE', 'op_func': &lt;function square at 0x7fc02452b520&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'CAST', 'op_func': functools.partial(&lt;function cast at 0x7fc03e1f1750&gt;, dtype=tf.int32), 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'ROUND', 'op_func': &lt;function round at 0x7fc02452a200&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'ROUND', 'op_func': &lt;function round at 0x7fc02452a200&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'NEG', 'op_func': &lt;function neg at 0x7fc02452b250&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'EXP', 'op_func': &lt;function exp at 0x7fc02452a7a0&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'CEIL', 'op_func': &lt;function ceil at 0x7fc02452a680&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'SIN', 'op_func': &lt;function sin at 0x7fc02452b400&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'TANH', 'op_func': &lt;function tanh at 0x7fc02452b640&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'NEG', 'op_func': &lt;function neg at 0x7fc02452b250&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'FLOOR', 'op_func': &lt;function floor at 0x7fc02452a950&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'LEAKY_RELU', 'op_func': functools.partial(&lt;function leaky_relu at 0x7fc02452ba30&gt;, alpha=-0.5), 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'FLOOR', 'op_func': &lt;function floor at 0x7fc02452a950&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'LOG', 'op_func': &lt;function log at 0x7fc02452b130&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'LOGICAL_NOT', 'op_func': &lt;function logical_not at 0x7fc03e5fdb40&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'RSQRT', 'op_func': &lt;function rsqrt at 0x7fc02452a830&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'LOGICAL_NOT', 'op_func': &lt;function logical_not at 0x7fc03e5fdb40&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'ROUND', 'op_func': &lt;function round at 0x7fc02452a200&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'LOG_SOFTMAX', 'op_func': functools.partial(&lt;function log_softmax_v2 at 0x7fc02452bbe0&gt;, axis=-1), 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'ELU', 'op_func': &lt;function elu at 0x7fc03e1272e0&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'LOG_SOFTMAX', 'op_func': functools.partial(&lt;function log_softmax_v2 at 0x7fc02452bbe0&gt;, axis=-1), 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'ELU', 'op_func': &lt;function elu at 0x7fc03e1272e0&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'RELU6', 'op_func': &lt;function relu6 at 0x7fc02452b9a0&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'ABS', 'op_func': &lt;function abs at 0x7fc024529ea0&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'FLOOR', 'op_func': &lt;function floor at 0x7fc02452a950&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'ABS', 'op_func': &lt;function abs at 0x7fc024529ea0&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'LOGICAL_NOT', 'op_func': &lt;function logical_not at 0x7fc03e5fdb40&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'COS', 'op_func': &lt;function cos at 0x7fc02452ad40&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'LOGICAL_NOT', 'op_func': &lt;function logical_not at 0x7fc03e5fdb40&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'NEG', 'op_func': &lt;function neg at 0x7fc02452b250&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'ELU', 'op_func': &lt;function elu at 0x7fc03e1272e0&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'RELU', 'op_func': &lt;function relu at 0x7fc03e1b70a0&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'LEAKY_RELU', 'op_func': functools.partial(&lt;function leaky_relu at 0x7fc02452ba30&gt;, alpha=-0.5), 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'SIN', 'op_func': &lt;function sin at 0x7fc02452b400&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'SIN', 'op_func': &lt;function sin at 0x7fc02452b400&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'COS', 'op_func': &lt;function cos at 0x7fc02452ad40&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'ELU', 'op_func': &lt;function elu at 0x7fc03e1272e0&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'LOGICAL_NOT', 'op_func': &lt;function logical_not at 0x7fc03e5fdb40&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'LOG_SOFTMAX', 'op_func': functools.partial(&lt;function log_softmax_v2 at 0x7fc02452bbe0&gt;, axis=-1), 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'SQRT', 'op_func': &lt;function sqrt at 0x7fc02452a710&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'LOG_SOFTMAX', 'op_func': functools.partial(&lt;function log_softmax_v2 at 0x7fc02452bbe0&gt;, axis=-1), 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'CEIL', 'op_func': &lt;function ceil at 0x7fc02452a680&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'RELU6', 'op_func': &lt;function relu6 at 0x7fc02452b9a0&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'COS', 'op_func': &lt;function cos at 0x7fc02452ad40&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'TANH', 'op_func': &lt;function tanh at 0x7fc02452b640&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'FLOOR', 'op_func': &lt;function floor at 0x7fc02452a950&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'SQUARE', 'op_func': &lt;function square at 0x7fc02452b520&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'COS', 'op_func': &lt;function cos at 0x7fc02452ad40&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'SQUARE', 'op_func': &lt;function square at 0x7fc02452b520&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'TANH', 'op_func': &lt;function tanh at 0x7fc02452b640&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'NEG', 'op_func': &lt;function neg at 0x7fc02452b250&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'SQUARE', 'op_func': &lt;function square at 0x7fc02452b520&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'SOFTMAX', 'op_func': functools.partial(&lt;function softmax_v2 at 0x7fc03d59ab00&gt;, axis=-1), 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'LOGISTIC', 'op_func': &lt;function sigmoid at 0x7fc02452a290&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'LOGISTIC', 'op_func': &lt;function sigmoid at 0x7fc02452a290&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'RELU6', 'op_func': &lt;function relu6 at 0x7fc02452b9a0&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'SOFTMAX', 'op_func': functools.partial(&lt;function softmax_v2 at 0x7fc03d59ab00&gt;, axis=-1), 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'FLOOR', 'op_func': &lt;function floor at 0x7fc02452a950&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'LOGISTIC', 'op_func': &lt;function sigmoid at 0x7fc02452a290&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'ABS', 'op_func': &lt;function abs at 0x7fc024529ea0&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'RELU', 'op_func': &lt;function relu at 0x7fc03e1b70a0&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'CEIL', 'op_func': &lt;function ceil at 0x7fc02452a680&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'SQRT', 'op_func': &lt;function sqrt at 0x7fc02452a710&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'SOFTMAX', 'op_func': functools.partial(&lt;function softmax_v2 at 0x7fc03d59ab00&gt;, axis=-1), 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'RSQRT', 'op_func': &lt;function rsqrt at 0x7fc02452a830&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'LEAKY_RELU', 'op_func': functools.partial(&lt;function leaky_relu at 0x7fc02452ba30&gt;, alpha=-0.5), 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'ROUND', 'op_func': &lt;function round at 0x7fc02452a200&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'LEAKY_RELU', 'op_func': functools.partial(&lt;function leaky_relu at 0x7fc02452ba30&gt;, alpha=-0.5), 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'ELU', 'op_func': &lt;function elu at 0x7fc03e1272e0&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'SQRT', 'op_func': &lt;function sqrt at 0x7fc02452a710&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'LOG_SOFTMAX', 'op_func': functools.partial(&lt;function log_softmax_v2 at 0x7fc02452bbe0&gt;, axis=-1), 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'FLOOR', 'op_func': &lt;function floor at 0x7fc02452a950&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'LOGISTIC', 'op_func': &lt;function sigmoid at 0x7fc02452a290&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'SQRT', 'op_func': &lt;function sqrt at 0x7fc02452a710&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'CAST', 'op_func': functools.partial(&lt;function cast at 0x7fc03e1f1750&gt;, dtype=tf.int32), 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'SOFTMAX', 'op_func': functools.partial(&lt;function softmax_v2 at 0x7fc03d59ab00&gt;, axis=-1), 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'CEIL', 'op_func': &lt;function ceil at 0x7fc02452a680&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'ROUND', 'op_func': &lt;function round at 0x7fc02452a200&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'CEIL', 'op_func': &lt;function ceil at 0x7fc02452a680&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'RELU', 'op_func': &lt;function relu at 0x7fc03e1b70a0&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'SOFTMAX', 'op_func': functools.partial(&lt;function softmax_v2 at 0x7fc03d59ab00&gt;, axis=-1), 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'LOG', 'op_func': &lt;function log at 0x7fc02452b130&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'RELU6', 'op_func': &lt;function relu6 at 0x7fc02452b9a0&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'CEIL', 'op_func': &lt;function ceil at 0x7fc02452a680&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'FLOOR', 'op_func': &lt;function floor at 0x7fc02452a950&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'ABS', 'op_func': &lt;function abs at 0x7fc024529ea0&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'LEAKY_RELU', 'op_func': functools.partial(&lt;function leaky_relu at 0x7fc02452ba30&gt;, alpha=-0.5), 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'LOG', 'op_func': &lt;function log at 0x7fc02452b130&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'SOFTMAX', 'op_func': functools.partial(&lt;function softmax_v2 at 0x7fc03d59ab00&gt;, axis=-1), 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'EXP', 'op_func': &lt;function exp at 0x7fc02452a7a0&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'SIN', 'op_func': &lt;function sin at 0x7fc02452b400&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'RELU6', 'op_func': &lt;function relu6 at 0x7fc02452b9a0&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'RELU6', 'op_func': &lt;function relu6 at 0x7fc02452b9a0&gt;, 'shape': [4, 6, 8, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'COS', 'op_func': &lt;function cos at 0x7fc02452ad40&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'COS', 'op_func': &lt;function cos at 0x7fc02452ad40&gt;, 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'SQRT', 'op_func': &lt;function sqrt at 0x7fc02452a710&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 9]} ]
-tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'CAST', 'op_func': functools.partial(&lt;function cast at 0x7fc03e1f1750&gt;, dtype=tf.int32), 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'SQRT', 'op_func': &lt;function sqrt at 0x7fa06306e710&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'SIN', 'op_func': &lt;function sin at 0x7fa06306f400&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'RSQRT', 'op_func': &lt;function rsqrt at 0x7fa06306e830&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'LOG', 'op_func': &lt;function log at 0x7fa06306f130&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'CEIL', 'op_func': &lt;function ceil at 0x7fa06306e680&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'SQUARE', 'op_func': &lt;function square at 0x7fa06306f520&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'SOFTMAX', 'op_func': functools.partial(&lt;function softmax_v2 at 0x7fa07c11ab00&gt;, axis=-1), 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'FLOOR', 'op_func': &lt;function floor at 0x7fa06306e950&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'COS', 'op_func': &lt;function cos at 0x7fa06306ed40&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'LEAKY_RELU', 'op_func': functools.partial(&lt;function leaky_relu at 0x7fa06306fa30&gt;, alpha=-0.5), 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'RELU', 'op_func': &lt;function relu at 0x7fa07cd630a0&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'TANH', 'op_func': &lt;function tanh at 0x7fa06306f640&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'RELU', 'op_func': &lt;function relu at 0x7fa07cd630a0&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'CAST', 'op_func': functools.partial(&lt;function cast at 0x7fa07cd9d750&gt;, dtype=tf.int32), 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'RSQRT', 'op_func': &lt;function rsqrt at 0x7fa06306e830&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'ELU', 'op_func': &lt;function elu at 0x7fa07cecf2e0&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'ELU', 'op_func': &lt;function elu at 0x7fa07cecf2e0&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'TANH', 'op_func': &lt;function tanh at 0x7fa06306f640&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'LOG', 'op_func': &lt;function log at 0x7fa06306f130&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'EXP', 'op_func': &lt;function exp at 0x7fa06306e7a0&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'SIN', 'op_func': &lt;function sin at 0x7fa06306f400&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'SQRT', 'op_func': &lt;function sqrt at 0x7fa06306e710&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'TANH', 'op_func': &lt;function tanh at 0x7fa06306f640&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'COS', 'op_func': &lt;function cos at 0x7fa06306ed40&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'SOFTMAX', 'op_func': functools.partial(&lt;function softmax_v2 at 0x7fa07c11ab00&gt;, axis=-1), 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'NEG', 'op_func': &lt;function neg at 0x7fa06306f250&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'SQRT', 'op_func': &lt;function sqrt at 0x7fa06306e710&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'LOG_SOFTMAX', 'op_func': functools.partial(&lt;function log_softmax_v2 at 0x7fa06306fbe0&gt;, axis=-1), 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'RELU6', 'op_func': &lt;function relu6 at 0x7fa06306f9a0&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'CEIL', 'op_func': &lt;function ceil at 0x7fa06306e680&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'CAST', 'op_func': functools.partial(&lt;function cast at 0x7fa07cd9d750&gt;, dtype=tf.int32), 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'ABS', 'op_func': &lt;function abs at 0x7fa06306dea0&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'RSQRT', 'op_func': &lt;function rsqrt at 0x7fa06306e830&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'SQUARE', 'op_func': &lt;function square at 0x7fa06306f520&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'SIN', 'op_func': &lt;function sin at 0x7fa06306f400&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'RSQRT', 'op_func': &lt;function rsqrt at 0x7fa06306e830&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'LOGICAL_NOT', 'op_func': &lt;function logical_not at 0x7fa07d1bdb40&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'RELU6', 'op_func': &lt;function relu6 at 0x7fa06306f9a0&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'NEG', 'op_func': &lt;function neg at 0x7fa06306f250&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'FLOOR', 'op_func': &lt;function floor at 0x7fa06306e950&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'RSQRT', 'op_func': &lt;function rsqrt at 0x7fa06306e830&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'FLOOR', 'op_func': &lt;function floor at 0x7fa06306e950&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'RELU6', 'op_func': &lt;function relu6 at 0x7fa06306f9a0&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'RELU', 'op_func': &lt;function relu at 0x7fa07cd630a0&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'SQUARE', 'op_func': &lt;function square at 0x7fa06306f520&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'CAST', 'op_func': functools.partial(&lt;function cast at 0x7fa07cd9d750&gt;, dtype=tf.int32), 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'ABS', 'op_func': &lt;function abs at 0x7fa06306dea0&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'LOG', 'op_func': &lt;function log at 0x7fa06306f130&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'LOGISTIC', 'op_func': &lt;function sigmoid at 0x7fa06306e290&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'ELU', 'op_func': &lt;function elu at 0x7fa07cecf2e0&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'CEIL', 'op_func': &lt;function ceil at 0x7fa06306e680&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'TANH', 'op_func': &lt;function tanh at 0x7fa06306f640&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'TANH', 'op_func': &lt;function tanh at 0x7fa06306f640&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'COS', 'op_func': &lt;function cos at 0x7fa06306ed40&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'ELU', 'op_func': &lt;function elu at 0x7fa07cecf2e0&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'ELU', 'op_func': &lt;function elu at 0x7fa07cecf2e0&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'SIN', 'op_func': &lt;function sin at 0x7fa06306f400&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'SOFTMAX', 'op_func': functools.partial(&lt;function softmax_v2 at 0x7fa07c11ab00&gt;, axis=-1), 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'CAST', 'op_func': functools.partial(&lt;function cast at 0x7fa07cd9d750&gt;, dtype=tf.int32), 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'RSQRT', 'op_func': &lt;function rsqrt at 0x7fa06306e830&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'LOG_SOFTMAX', 'op_func': functools.partial(&lt;function log_softmax_v2 at 0x7fa06306fbe0&gt;, axis=-1), 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'LEAKY_RELU', 'op_func': functools.partial(&lt;function leaky_relu at 0x7fa06306fa30&gt;, alpha=-0.5), 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'ROUND', 'op_func': &lt;function round at 0x7fa06306e200&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'EXP', 'op_func': &lt;function exp at 0x7fa06306e7a0&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'ABS', 'op_func': &lt;function abs at 0x7fa06306dea0&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'LEAKY_RELU', 'op_func': functools.partial(&lt;function leaky_relu at 0x7fa06306fa30&gt;, alpha=-0.5), 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'ELU', 'op_func': &lt;function elu at 0x7fa07cecf2e0&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'NEG', 'op_func': &lt;function neg at 0x7fa06306f250&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'NEG', 'op_func': &lt;function neg at 0x7fa06306f250&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'SIN', 'op_func': &lt;function sin at 0x7fa06306f400&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'ABS', 'op_func': &lt;function abs at 0x7fa06306dea0&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'EXP', 'op_func': &lt;function exp at 0x7fa06306e7a0&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'SQRT', 'op_func': &lt;function sqrt at 0x7fa06306e710&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'SOFTMAX', 'op_func': functools.partial(&lt;function softmax_v2 at 0x7fa07c11ab00&gt;, axis=-1), 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'SQUARE', 'op_func': &lt;function square at 0x7fa06306f520&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'CAST', 'op_func': functools.partial(&lt;function cast at 0x7fa07cd9d750&gt;, dtype=tf.int32), 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'CEIL', 'op_func': &lt;function ceil at 0x7fa06306e680&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'CEIL', 'op_func': &lt;function ceil at 0x7fa06306e680&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'ROUND', 'op_func': &lt;function round at 0x7fa06306e200&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'SQUARE', 'op_func': &lt;function square at 0x7fa06306f520&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'COS', 'op_func': &lt;function cos at 0x7fa06306ed40&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'SQRT', 'op_func': &lt;function sqrt at 0x7fa06306e710&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'EXP', 'op_func': &lt;function exp at 0x7fa06306e7a0&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'FLOOR', 'op_func': &lt;function floor at 0x7fa06306e950&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'RELU', 'op_func': &lt;function relu at 0x7fa07cd630a0&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'COS', 'op_func': &lt;function cos at 0x7fa06306ed40&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'SQRT', 'op_func': &lt;function sqrt at 0x7fa06306e710&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'LEAKY_RELU', 'op_func': functools.partial(&lt;function leaky_relu at 0x7fa06306fa30&gt;, alpha=-0.5), 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'COS', 'op_func': &lt;function cos at 0x7fa06306ed40&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'ROUND', 'op_func': &lt;function round at 0x7fa06306e200&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'LOGICAL_NOT', 'op_func': &lt;function logical_not at 0x7fa07d1bdb40&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'LEAKY_RELU', 'op_func': functools.partial(&lt;function leaky_relu at 0x7fa06306fa30&gt;, alpha=-0.5), 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'RELU', 'op_func': &lt;function relu at 0x7fa07cd630a0&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'SIN', 'op_func': &lt;function sin at 0x7fa06306f400&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'SQUARE', 'op_func': &lt;function square at 0x7fa06306f520&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'EXP', 'op_func': &lt;function exp at 0x7fa06306e7a0&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'ROUND', 'op_func': &lt;function round at 0x7fa06306e200&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'LOGISTIC', 'op_func': &lt;function sigmoid at 0x7fa06306e290&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'SQUARE', 'op_func': &lt;function square at 0x7fa06306f520&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'LOG_SOFTMAX', 'op_func': functools.partial(&lt;function log_softmax_v2 at 0x7fa06306fbe0&gt;, axis=-1), 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'ROUND', 'op_func': &lt;function round at 0x7fa06306e200&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'ABS', 'op_func': &lt;function abs at 0x7fa06306dea0&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'RELU6', 'op_func': &lt;function relu6 at 0x7fa06306f9a0&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'LEAKY_RELU', 'op_func': functools.partial(&lt;function leaky_relu at 0x7fa06306fa30&gt;, alpha=-0.5), 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'LOGICAL_NOT', 'op_func': &lt;function logical_not at 0x7fa07d1bdb40&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'RELU6', 'op_func': &lt;function relu6 at 0x7fa06306f9a0&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'ELU', 'op_func': &lt;function elu at 0x7fa07cecf2e0&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'CEIL', 'op_func': &lt;function ceil at 0x7fa06306e680&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'LOG', 'op_func': &lt;function log at 0x7fa06306f130&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'LOG_SOFTMAX', 'op_func': functools.partial(&lt;function log_softmax_v2 at 0x7fa06306fbe0&gt;, axis=-1), 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'TANH', 'op_func': &lt;function tanh at 0x7fa06306f640&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'SIN', 'op_func': &lt;function sin at 0x7fa06306f400&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'LOG', 'op_func': &lt;function log at 0x7fa06306f130&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'RELU', 'op_func': &lt;function relu at 0x7fa07cd630a0&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'ROUND', 'op_func': &lt;function round at 0x7fa06306e200&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'NEG', 'op_func': &lt;function neg at 0x7fa06306f250&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'FLOOR', 'op_func': &lt;function floor at 0x7fa06306e950&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'LOGISTIC', 'op_func': &lt;function sigmoid at 0x7fa06306e290&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'SOFTMAX', 'op_func': functools.partial(&lt;function softmax_v2 at 0x7fa07c11ab00&gt;, axis=-1), 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'CAST', 'op_func': functools.partial(&lt;function cast at 0x7fa07cd9d750&gt;, dtype=tf.int32), 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'LEAKY_RELU', 'op_func': functools.partial(&lt;function leaky_relu at 0x7fa06306fa30&gt;, alpha=-0.5), 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'SOFTMAX', 'op_func': functools.partial(&lt;function softmax_v2 at 0x7fa07c11ab00&gt;, axis=-1), 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'FLOOR', 'op_func': &lt;function floor at 0x7fa06306e950&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'LOG_SOFTMAX', 'op_func': functools.partial(&lt;function log_softmax_v2 at 0x7fa06306fbe0&gt;, axis=-1), 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'LOG_SOFTMAX', 'op_func': functools.partial(&lt;function log_softmax_v2 at 0x7fa06306fbe0&gt;, axis=-1), 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'LOGISTIC', 'op_func': &lt;function sigmoid at 0x7fa06306e290&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'LOGISTIC', 'op_func': &lt;function sigmoid at 0x7fa06306e290&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'RELU', 'op_func': &lt;function relu at 0x7fa07cd630a0&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'NEG', 'op_func': &lt;function neg at 0x7fa06306f250&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'RSQRT', 'op_func': &lt;function rsqrt at 0x7fa06306e830&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'SQRT', 'op_func': &lt;function sqrt at 0x7fa06306e710&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'EXP', 'op_func': &lt;function exp at 0x7fa06306e7a0&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'LOGICAL_NOT', 'op_func': &lt;function logical_not at 0x7fa07d1bdb40&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'RELU6', 'op_func': &lt;function relu6 at 0x7fa06306f9a0&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'SOFTMAX', 'op_func': functools.partial(&lt;function softmax_v2 at 0x7fa07c11ab00&gt;, axis=-1), 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'ABS', 'op_func': &lt;function abs at 0x7fa06306dea0&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'LOG_SOFTMAX', 'op_func': functools.partial(&lt;function log_softmax_v2 at 0x7fa06306fbe0&gt;, axis=-1), 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'SIN', 'op_func': &lt;function sin at 0x7fa06306f400&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'TANH', 'op_func': &lt;function tanh at 0x7fa06306f640&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'LOGISTIC', 'op_func': &lt;function sigmoid at 0x7fa06306e290&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'FLOOR', 'op_func': &lt;function floor at 0x7fa06306e950&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'CEIL', 'op_func': &lt;function ceil at 0x7fa06306e680&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'NEG', 'op_func': &lt;function neg at 0x7fa06306f250&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'EXP', 'op_func': &lt;function exp at 0x7fa06306e7a0&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'LOG', 'op_func': &lt;function log at 0x7fa06306f130&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'ABS', 'op_func': &lt;function abs at 0x7fa06306dea0&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'CAST', 'op_func': functools.partial(&lt;function cast at 0x7fa07cd9d750&gt;, dtype=tf.int32), 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'ROUND', 'op_func': &lt;function round at 0x7fa06306e200&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'LOGISTIC', 'op_func': &lt;function sigmoid at 0x7fa06306e290&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'NEG', 'op_func': &lt;function neg at 0x7fa06306f250&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'RELU6', 'op_func': &lt;function relu6 at 0x7fa06306f9a0&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'SQRT', 'op_func': &lt;function sqrt at 0x7fa06306e710&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'COS', 'op_func': &lt;function cos at 0x7fa06306ed40&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'RELU', 'op_func': &lt;function relu at 0x7fa07cd630a0&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'LOG', 'op_func': &lt;function log at 0x7fa06306f130&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'FLOOR', 'op_func': &lt;function floor at 0x7fa06306e950&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'LOGICAL_NOT', 'op_func': &lt;function logical_not at 0x7fa07d1bdb40&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'CEIL', 'op_func': &lt;function ceil at 0x7fa06306e680&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'ROUND', 'op_func': &lt;function round at 0x7fa06306e200&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'COS', 'op_func': &lt;function cos at 0x7fa06306ed40&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'EXP', 'op_func': &lt;function exp at 0x7fa06306e7a0&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'LOGICAL_NOT', 'op_func': &lt;function logical_not at 0x7fa07d1bdb40&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'LOGISTIC', 'op_func': &lt;function sigmoid at 0x7fa06306e290&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'LOG_SOFTMAX', 'op_func': functools.partial(&lt;function log_softmax_v2 at 0x7fa06306fbe0&gt;, axis=-1), 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'SQUARE', 'op_func': &lt;function square at 0x7fa06306f520&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'ELU', 'op_func': &lt;function elu at 0x7fa07cecf2e0&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'LOGICAL_NOT', 'op_func': &lt;function logical_not at 0x7fa07d1bdb40&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'LOGICAL_NOT', 'op_func': &lt;function logical_not at 0x7fa07d1bdb40&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'LOG', 'op_func': &lt;function log at 0x7fa06306f130&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'ABS', 'op_func': &lt;function abs at 0x7fa06306dea0&gt;, 'shape': [6, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'CAST', 'op_func': functools.partial(&lt;function cast at 0x7fa07cd9d750&gt;, dtype=tf.int32), 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'RELU6', 'op_func': &lt;function relu6 at 0x7fa06306f9a0&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'RSQRT', 'op_func': &lt;function rsqrt at 0x7fa06306e830&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'LEAKY_RELU', 'op_func': functools.partial(&lt;function leaky_relu at 0x7fa06306fa30&gt;, alpha=-0.5), 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'TANH', 'op_func': &lt;function tanh at 0x7fa06306f640&gt;, 'shape': [4, 6, 8, 9]} ]
+tensorflow_lite_tests/test_tfl_Unary.py::TestTFLiteUnaryLayerTest::test_unary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'SOFTMAX', 'op_func': functools.partial(&lt;function softmax_v2 at 0x7fa07c11ab00&gt;, axis=-1), 'shape': [6, 9]} ]
 tensorflow_lite_tests/test_tfl_Shape.py::TestTFLiteShapeLayerTest::test_shape[ ie_device:CPU - precision:FP32 - params:{'shape': [1, 5], 'new_shape': [2, 5]} ]
 tensorflow_lite_tests/test_tfl_Shape.py::TestTFLiteShapeLayerTest::test_shape[ ie_device:GPU - precision:FP32 - params:{'shape': [1, 2], 'new_shape': [2, 2]} ]
 tensorflow_lite_tests/test_tfl_Shape.py::TestTFLiteShapeLayerTest::test_shape[ ie_device:CPU - precision:FP32 - params:{'shape': [1, 2], 'new_shape': [2, 2]} ]
@@ -1118,118 +1118,118 @@

 tensorflow_lite_tests/test_tfl_BatchToSpaceND.py::TestTFLiteBatchToSpaceNDLayerTest::test_batch_to_space_nd[ ie_device:GPU - precision:FP32 - params:{'shape': [7, 10, 5, 7], 'block_shape': [1, 3], 'crops': [[2, 1], [2, 3]]} ]
 tensorflow_lite_tests/test_tfl_BatchToSpaceND.py::TestTFLiteBatchToSpaceNDLayerTest::test_batch_to_space_nd[ ie_device:GPU - precision:FP16 - params:{'shape': [20, 8, 7, 20], 'block_shape': [3, 10], 'crops': [[1, 2], [2, 4]]} ]
 tensorflow_lite_tests/test_tfl_BatchToSpaceND.py::TestTFLiteBatchToSpaceNDLayerTest::test_batch_to_space_nd[ ie_device:GPU - precision:FP32 - params:{'shape': [20, 8, 7, 20], 'block_shape': [3, 10], 'crops': [[1, 2], [2, 4]]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'LESS_EQUAL', 'op_func': &lt;function less_equal at 0x7fc03e5fcdc0&gt;, 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'LESS', 'op_func': &lt;function less at 0x7fc03e5fcaf0&gt;, 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'LOGICAL_OR', 'op_func': &lt;function logical_or at 0x7fc03e5fdd80&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'MINIMUM', 'op_func': &lt;function minimum at 0x7fc024585900&gt;, 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'LOGICAL_AND', 'op_func': &lt;function logical_and at 0x7fc03e5fd900&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'FLOOR_MOD', 'op_func': &lt;function floor_mod at 0x7fc024585750&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'GREATER_EQUAL', 'op_func': &lt;function greater_equal at 0x7fc03e5db130&gt;, 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'MAXIMUM', 'op_func': &lt;function maximum at 0x7fc024585870&gt;, 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'NOT_EQUAL', 'op_func': &lt;function not_equal at 0x7fc03e011ea0&gt;, 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'LOGICAL_OR', 'op_func': &lt;function logical_or at 0x7fc03e5fdd80&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'NOT_EQUAL', 'op_func': &lt;function not_equal at 0x7fc03e011ea0&gt;, 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'POW', 'op_func': &lt;function pow at 0x7fc03e1f0b80&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'LOGICAL_OR', 'op_func': &lt;function logical_or at 0x7fc03e5fdd80&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'LESS_EQUAL', 'op_func': &lt;function less_equal at 0x7fc03e5fcdc0&gt;, 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'LOGICAL_AND', 'op_func': &lt;function logical_and at 0x7fc03e5fd900&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'SQUARED_DIFFERENCE', 'op_func': &lt;function squared_difference at 0x7fc03e45ef80&gt;, 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'MINIMUM', 'op_func': &lt;function minimum at 0x7fc024585900&gt;, 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'FLOOR_DIV', 'op_func': &lt;function floordiv at 0x7fc03e1f35b0&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'NOT_EQUAL', 'op_func': &lt;function not_equal at 0x7fc03e011ea0&gt;, 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'LOGICAL_AND', 'op_func': &lt;function logical_and at 0x7fc03e5fd900&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'MINIMUM', 'op_func': &lt;function minimum at 0x7fc024585900&gt;, 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'MINIMUM', 'op_func': &lt;function minimum at 0x7fc024585900&gt;, 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'NOT_EQUAL', 'op_func': &lt;function not_equal at 0x7fc03e011ea0&gt;, 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'LOGICAL_AND', 'op_func': &lt;function logical_and at 0x7fc03e5fd900&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'MAXIMUM', 'op_func': &lt;function maximum at 0x7fc024585870&gt;, 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'MAXIMUM', 'op_func': &lt;function maximum at 0x7fc024585870&gt;, 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'SQUARED_DIFFERENCE', 'op_func': &lt;function squared_difference at 0x7fc03e45ef80&gt;, 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'GREATER_EQUAL', 'op_func': &lt;function greater_equal at 0x7fc03e5db130&gt;, 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'FLOOR_MOD', 'op_func': &lt;function floor_mod at 0x7fc024585750&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'POW', 'op_func': &lt;function pow at 0x7fc03e1f0b80&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'GREATER', 'op_func': &lt;function greater at 0x7fc03e5dae60&gt;, 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'LESS_EQUAL', 'op_func': &lt;function less_equal at 0x7fc03e5fcdc0&gt;, 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'POW', 'op_func': &lt;function pow at 0x7fc03e1f0b80&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'LESS_EQUAL', 'op_func': &lt;function less_equal at 0x7fc03e5fcdc0&gt;, 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'LESS', 'op_func': &lt;function less at 0x7fc03e5fcaf0&gt;, 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'FLOOR_DIV', 'op_func': &lt;function floordiv at 0x7fc03e1f35b0&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'EQUAL', 'op_func': &lt;function equal at 0x7fc03e011cf0&gt;, 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'LESS_EQUAL', 'op_func': &lt;function less_equal at 0x7fc03e5fcdc0&gt;, 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'SQUARED_DIFFERENCE', 'op_func': &lt;function squared_difference at 0x7fc03e45ef80&gt;, 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'GREATER', 'op_func': &lt;function greater at 0x7fc03e5dae60&gt;, 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'MAXIMUM', 'op_func': &lt;function maximum at 0x7fc024585870&gt;, 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'LOGICAL_OR', 'op_func': &lt;function logical_or at 0x7fc03e5fdd80&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'LOGICAL_AND', 'op_func': &lt;function logical_and at 0x7fc03e5fd900&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'FLOOR_MOD', 'op_func': &lt;function floor_mod at 0x7fc024585750&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'GREATER_EQUAL', 'op_func': &lt;function greater_equal at 0x7fc03e5db130&gt;, 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'LOGICAL_OR', 'op_func': &lt;function logical_or at 0x7fc03e5fdd80&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'GREATER_EQUAL', 'op_func': &lt;function greater_equal at 0x7fc03e5db130&gt;, 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'GREATER', 'op_func': &lt;function greater at 0x7fc03e5dae60&gt;, 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'EQUAL', 'op_func': &lt;function equal at 0x7fc03e011cf0&gt;, 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'GREATER', 'op_func': &lt;function greater at 0x7fc03e5dae60&gt;, 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'LOGICAL_AND', 'op_func': &lt;function logical_and at 0x7fc03e5fd900&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'FLOOR_DIV', 'op_func': &lt;function floordiv at 0x7fc03e1f35b0&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'LOGICAL_OR', 'op_func': &lt;function logical_or at 0x7fc03e5fdd80&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'LESS', 'op_func': &lt;function less at 0x7fc03e5fcaf0&gt;, 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'GREATER', 'op_func': &lt;function greater at 0x7fc03e5dae60&gt;, 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'SQUARED_DIFFERENCE', 'op_func': &lt;function squared_difference at 0x7fc03e45ef80&gt;, 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'POW', 'op_func': &lt;function pow at 0x7fc03e1f0b80&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'FLOOR_MOD', 'op_func': &lt;function floor_mod at 0x7fc024585750&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'NOT_EQUAL', 'op_func': &lt;function not_equal at 0x7fc03e011ea0&gt;, 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'FLOOR_MOD', 'op_func': &lt;function floor_mod at 0x7fc024585750&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'NOT_EQUAL', 'op_func': &lt;function not_equal at 0x7fc03e011ea0&gt;, 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'LESS', 'op_func': &lt;function less at 0x7fc03e5fcaf0&gt;, 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'FLOOR_DIV', 'op_func': &lt;function floordiv at 0x7fc03e1f35b0&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'FLOOR_DIV', 'op_func': &lt;function floordiv at 0x7fc03e1f35b0&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'GREATER_EQUAL', 'op_func': &lt;function greater_equal at 0x7fc03e5db130&gt;, 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'LESS_EQUAL', 'op_func': &lt;function less_equal at 0x7fc03e5fcdc0&gt;, 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'MAXIMUM', 'op_func': &lt;function maximum at 0x7fc024585870&gt;, 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'SQUARED_DIFFERENCE', 'op_func': &lt;function squared_difference at 0x7fc03e45ef80&gt;, 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'GREATER_EQUAL', 'op_func': &lt;function greater_equal at 0x7fc03e5db130&gt;, 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'LESS', 'op_func': &lt;function less at 0x7fc03e5fcaf0&gt;, 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'EQUAL', 'op_func': &lt;function equal at 0x7fc03e011cf0&gt;, 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'EQUAL', 'op_func': &lt;function equal at 0x7fc03e011cf0&gt;, 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'FLOOR_MOD', 'op_func': &lt;function floor_mod at 0x7fc024585750&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'GREATER_EQUAL', 'op_func': &lt;function greater_equal at 0x7fc03e5db130&gt;, 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'MAXIMUM', 'op_func': &lt;function maximum at 0x7fc024585870&gt;, 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'FLOOR_DIV', 'op_func': &lt;function floordiv at 0x7fc03e1f35b0&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'LOGICAL_OR', 'op_func': &lt;function logical_or at 0x7fc03e5fdd80&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'FLOOR_DIV', 'op_func': &lt;function floordiv at 0x7fc03e1f35b0&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'LESS', 'op_func': &lt;function less at 0x7fc03e5fcaf0&gt;, 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'LESS_EQUAL', 'op_func': &lt;function less_equal at 0x7fc03e5fcdc0&gt;, 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'FLOOR_MOD', 'op_func': &lt;function floor_mod at 0x7fc024585750&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'POW', 'op_func': &lt;function pow at 0x7fc03e1f0b80&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'POW', 'op_func': &lt;function pow at 0x7fc03e1f0b80&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'POW', 'op_func': &lt;function pow at 0x7fc03e1f0b80&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'EQUAL', 'op_func': &lt;function equal at 0x7fc03e011cf0&gt;, 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'GREATER', 'op_func': &lt;function greater at 0x7fc03e5dae60&gt;, 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'LESS', 'op_func': &lt;function less at 0x7fc03e5fcaf0&gt;, 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'EQUAL', 'op_func': &lt;function equal at 0x7fc03e011cf0&gt;, 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'GREATER_EQUAL', 'op_func': &lt;function greater_equal at 0x7fc03e5db130&gt;, 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'FLOOR_DIV', 'op_func': &lt;function floordiv at 0x7fc03e1f35b0&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'FLOOR_MOD', 'op_func': &lt;function floor_mod at 0x7fc024585750&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'MAXIMUM', 'op_func': &lt;function maximum at 0x7fc024585870&gt;, 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'GREATER', 'op_func': &lt;function greater at 0x7fc03e5dae60&gt;, 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'LOGICAL_AND', 'op_func': &lt;function logical_and at 0x7fc03e5fd900&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'GREATER', 'op_func': &lt;function greater at 0x7fc03e5dae60&gt;, 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'SQUARED_DIFFERENCE', 'op_func': &lt;function squared_difference at 0x7fc03e45ef80&gt;, 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'EQUAL', 'op_func': &lt;function equal at 0x7fc03e011cf0&gt;, 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'MINIMUM', 'op_func': &lt;function minimum at 0x7fc024585900&gt;, 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'LOGICAL_OR', 'op_func': &lt;function logical_or at 0x7fc03e5fdd80&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'MAXIMUM', 'op_func': &lt;function maximum at 0x7fc024585870&gt;, 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'SQUARED_DIFFERENCE', 'op_func': &lt;function squared_difference at 0x7fc03e45ef80&gt;, 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'NOT_EQUAL', 'op_func': &lt;function not_equal at 0x7fc03e011ea0&gt;, 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'LESS_EQUAL', 'op_func': &lt;function less_equal at 0x7fc03e5fcdc0&gt;, 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'LESS', 'op_func': &lt;function less at 0x7fc03e5fcaf0&gt;, 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'MINIMUM', 'op_func': &lt;function minimum at 0x7fc024585900&gt;, 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'NOT_EQUAL', 'op_func': &lt;function not_equal at 0x7fc03e011ea0&gt;, 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'EQUAL', 'op_func': &lt;function equal at 0x7fc03e011cf0&gt;, 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'SQUARED_DIFFERENCE', 'op_func': &lt;function squared_difference at 0x7fc03e45ef80&gt;, 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'MINIMUM', 'op_func': &lt;function minimum at 0x7fc024585900&gt;, 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'MINIMUM', 'op_func': &lt;function minimum at 0x7fc024585900&gt;, 'shape': [4, 1, 5, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'LOGICAL_AND', 'op_func': &lt;function logical_and at 0x7fc03e5fd900&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 1]} ]
-tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'POW', 'op_func': &lt;function pow at 0x7fc03e1f0b80&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'MINIMUM', 'op_func': &lt;function minimum at 0x7fa0630c9900&gt;, 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'LESS', 'op_func': &lt;function less at 0x7fa07d1bcaf0&gt;, 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'MAXIMUM', 'op_func': &lt;function maximum at 0x7fa0630c9870&gt;, 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'LESS', 'op_func': &lt;function less at 0x7fa07d1bcaf0&gt;, 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'EQUAL', 'op_func': &lt;function equal at 0x7fa07cdb9cf0&gt;, 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'POW', 'op_func': &lt;function pow at 0x7fa07cd9cb80&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'MINIMUM', 'op_func': &lt;function minimum at 0x7fa0630c9900&gt;, 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'LESS_EQUAL', 'op_func': &lt;function less_equal at 0x7fa07d1bcdc0&gt;, 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'LOGICAL_AND', 'op_func': &lt;function logical_and at 0x7fa07d1bd900&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'MAXIMUM', 'op_func': &lt;function maximum at 0x7fa0630c9870&gt;, 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'EQUAL', 'op_func': &lt;function equal at 0x7fa07cdb9cf0&gt;, 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'GREATER_EQUAL', 'op_func': &lt;function greater_equal at 0x7fa07d1a3130&gt;, 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'NOT_EQUAL', 'op_func': &lt;function not_equal at 0x7fa07cdb9ea0&gt;, 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'MAXIMUM', 'op_func': &lt;function maximum at 0x7fa0630c9870&gt;, 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'MINIMUM', 'op_func': &lt;function minimum at 0x7fa0630c9900&gt;, 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'MINIMUM', 'op_func': &lt;function minimum at 0x7fa0630c9900&gt;, 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'NOT_EQUAL', 'op_func': &lt;function not_equal at 0x7fa07cdb9ea0&gt;, 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'LESS', 'op_func': &lt;function less at 0x7fa07d1bcaf0&gt;, 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'FLOOR_DIV', 'op_func': &lt;function floordiv at 0x7fa07cd9f5b0&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'LESS_EQUAL', 'op_func': &lt;function less_equal at 0x7fa07d1bcdc0&gt;, 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'LESS_EQUAL', 'op_func': &lt;function less_equal at 0x7fa07d1bcdc0&gt;, 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'GREATER_EQUAL', 'op_func': &lt;function greater_equal at 0x7fa07d1a3130&gt;, 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'MAXIMUM', 'op_func': &lt;function maximum at 0x7fa0630c9870&gt;, 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'EQUAL', 'op_func': &lt;function equal at 0x7fa07cdb9cf0&gt;, 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'EQUAL', 'op_func': &lt;function equal at 0x7fa07cdb9cf0&gt;, 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'SQUARED_DIFFERENCE', 'op_func': &lt;function squared_difference at 0x7fa07d01af80&gt;, 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'POW', 'op_func': &lt;function pow at 0x7fa07cd9cb80&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'LOGICAL_OR', 'op_func': &lt;function logical_or at 0x7fa07d1bdd80&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'LOGICAL_AND', 'op_func': &lt;function logical_and at 0x7fa07d1bd900&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'POW', 'op_func': &lt;function pow at 0x7fa07cd9cb80&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'SQUARED_DIFFERENCE', 'op_func': &lt;function squared_difference at 0x7fa07d01af80&gt;, 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'GREATER', 'op_func': &lt;function greater at 0x7fa07d1a2e60&gt;, 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'POW', 'op_func': &lt;function pow at 0x7fa07cd9cb80&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'LOGICAL_AND', 'op_func': &lt;function logical_and at 0x7fa07d1bd900&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'MINIMUM', 'op_func': &lt;function minimum at 0x7fa0630c9900&gt;, 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'SQUARED_DIFFERENCE', 'op_func': &lt;function squared_difference at 0x7fa07d01af80&gt;, 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'FLOOR_MOD', 'op_func': &lt;function floor_mod at 0x7fa0630c9750&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'LESS', 'op_func': &lt;function less at 0x7fa07d1bcaf0&gt;, 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'SQUARED_DIFFERENCE', 'op_func': &lt;function squared_difference at 0x7fa07d01af80&gt;, 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'LOGICAL_OR', 'op_func': &lt;function logical_or at 0x7fa07d1bdd80&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'SQUARED_DIFFERENCE', 'op_func': &lt;function squared_difference at 0x7fa07d01af80&gt;, 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'FLOOR_DIV', 'op_func': &lt;function floordiv at 0x7fa07cd9f5b0&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'GREATER_EQUAL', 'op_func': &lt;function greater_equal at 0x7fa07d1a3130&gt;, 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'NOT_EQUAL', 'op_func': &lt;function not_equal at 0x7fa07cdb9ea0&gt;, 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'GREATER', 'op_func': &lt;function greater at 0x7fa07d1a2e60&gt;, 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'LESS_EQUAL', 'op_func': &lt;function less_equal at 0x7fa07d1bcdc0&gt;, 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'LESS', 'op_func': &lt;function less at 0x7fa07d1bcaf0&gt;, 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'LOGICAL_AND', 'op_func': &lt;function logical_and at 0x7fa07d1bd900&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'MAXIMUM', 'op_func': &lt;function maximum at 0x7fa0630c9870&gt;, 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'EQUAL', 'op_func': &lt;function equal at 0x7fa07cdb9cf0&gt;, 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'NOT_EQUAL', 'op_func': &lt;function not_equal at 0x7fa07cdb9ea0&gt;, 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'FLOOR_MOD', 'op_func': &lt;function floor_mod at 0x7fa0630c9750&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'FLOOR_DIV', 'op_func': &lt;function floordiv at 0x7fa07cd9f5b0&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'FLOOR_DIV', 'op_func': &lt;function floordiv at 0x7fa07cd9f5b0&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'GREATER_EQUAL', 'op_func': &lt;function greater_equal at 0x7fa07d1a3130&gt;, 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'LOGICAL_OR', 'op_func': &lt;function logical_or at 0x7fa07d1bdd80&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'LESS_EQUAL', 'op_func': &lt;function less_equal at 0x7fa07d1bcdc0&gt;, 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'NOT_EQUAL', 'op_func': &lt;function not_equal at 0x7fa07cdb9ea0&gt;, 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'FLOOR_MOD', 'op_func': &lt;function floor_mod at 0x7fa0630c9750&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'GREATER', 'op_func': &lt;function greater at 0x7fa07d1a2e60&gt;, 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'NOT_EQUAL', 'op_func': &lt;function not_equal at 0x7fa07cdb9ea0&gt;, 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'LESS_EQUAL', 'op_func': &lt;function less_equal at 0x7fa07d1bcdc0&gt;, 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'GREATER', 'op_func': &lt;function greater at 0x7fa07d1a2e60&gt;, 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'LOGICAL_AND', 'op_func': &lt;function logical_and at 0x7fa07d1bd900&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'POW', 'op_func': &lt;function pow at 0x7fa07cd9cb80&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'LOGICAL_AND', 'op_func': &lt;function logical_and at 0x7fa07d1bd900&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'GREATER_EQUAL', 'op_func': &lt;function greater_equal at 0x7fa07d1a3130&gt;, 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'FLOOR_DIV', 'op_func': &lt;function floordiv at 0x7fa07cd9f5b0&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'MINIMUM', 'op_func': &lt;function minimum at 0x7fa0630c9900&gt;, 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'SQUARED_DIFFERENCE', 'op_func': &lt;function squared_difference at 0x7fa07d01af80&gt;, 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'MAXIMUM', 'op_func': &lt;function maximum at 0x7fa0630c9870&gt;, 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'FLOOR_DIV', 'op_func': &lt;function floordiv at 0x7fa07cd9f5b0&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'LOGICAL_OR', 'op_func': &lt;function logical_or at 0x7fa07d1bdd80&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'LESS', 'op_func': &lt;function less at 0x7fa07d1bcaf0&gt;, 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'MAXIMUM', 'op_func': &lt;function maximum at 0x7fa0630c9870&gt;, 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'GREATER', 'op_func': &lt;function greater at 0x7fa07d1a2e60&gt;, 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'LESS_EQUAL', 'op_func': &lt;function less_equal at 0x7fa07d1bcdc0&gt;, 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'LOGICAL_OR', 'op_func': &lt;function logical_or at 0x7fa07d1bdd80&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'LOGICAL_AND', 'op_func': &lt;function logical_and at 0x7fa07d1bd900&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'MAXIMUM', 'op_func': &lt;function maximum at 0x7fa0630c9870&gt;, 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'MINIMUM', 'op_func': &lt;function minimum at 0x7fa0630c9900&gt;, 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'FLOOR_MOD', 'op_func': &lt;function floor_mod at 0x7fa0630c9750&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'LOGICAL_AND', 'op_func': &lt;function logical_and at 0x7fa07d1bd900&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'FLOOR_MOD', 'op_func': &lt;function floor_mod at 0x7fa0630c9750&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'FLOOR_MOD', 'op_func': &lt;function floor_mod at 0x7fa0630c9750&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'GREATER_EQUAL', 'op_func': &lt;function greater_equal at 0x7fa07d1a3130&gt;, 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'EQUAL', 'op_func': &lt;function equal at 0x7fa07cdb9cf0&gt;, 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'EQUAL', 'op_func': &lt;function equal at 0x7fa07cdb9cf0&gt;, 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'LOGICAL_OR', 'op_func': &lt;function logical_or at 0x7fa07d1bdd80&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'GREATER', 'op_func': &lt;function greater at 0x7fa07d1a2e60&gt;, 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'SQUARED_DIFFERENCE', 'op_func': &lt;function squared_difference at 0x7fa07d01af80&gt;, 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'MINIMUM', 'op_func': &lt;function minimum at 0x7fa0630c9900&gt;, 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'LOGICAL_OR', 'op_func': &lt;function logical_or at 0x7fa07d1bdd80&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'LESS_EQUAL', 'op_func': &lt;function less_equal at 0x7fa07d1bcdc0&gt;, 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'EQUAL', 'op_func': &lt;function equal at 0x7fa07cdb9cf0&gt;, 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'GREATER_EQUAL', 'op_func': &lt;function greater_equal at 0x7fa07d1a3130&gt;, 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'LESS', 'op_func': &lt;function less at 0x7fa07d1bcaf0&gt;, 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'POW', 'op_func': &lt;function pow at 0x7fa07cd9cb80&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'NOT_EQUAL', 'op_func': &lt;function not_equal at 0x7fa07cdb9ea0&gt;, 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'LOGICAL_OR', 'op_func': &lt;function logical_or at 0x7fa07d1bdd80&gt;, 'kwargs_to_prepare_input': 'boolean', 'dtype': tf.bool, 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'FLOOR_DIV', 'op_func': &lt;function floordiv at 0x7fa07cd9f5b0&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'POW', 'op_func': &lt;function pow at 0x7fa07cd9cb80&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'POW', 'op_func': &lt;function pow at 0x7fa07cd9cb80&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP16 - params:{'op_name': 'NOT_EQUAL', 'op_func': &lt;function not_equal at 0x7fa07cdb9ea0&gt;, 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'SQUARED_DIFFERENCE', 'op_func': &lt;function squared_difference at 0x7fa07d01af80&gt;, 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'FLOOR_DIV', 'op_func': &lt;function floordiv at 0x7fa07cd9f5b0&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'GREATER', 'op_func': &lt;function greater at 0x7fa07d1a2e60&gt;, 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'FLOOR_MOD', 'op_func': &lt;function floor_mod at 0x7fa0630c9750&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP16 - params:{'op_name': 'LESS', 'op_func': &lt;function less at 0x7fa07d1bcaf0&gt;, 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'GREATER_EQUAL', 'op_func': &lt;function greater_equal at 0x7fa07d1a3130&gt;, 'shape': [6, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:CPU - precision:FP32 - params:{'op_name': 'FLOOR_MOD', 'op_func': &lt;function floor_mod at 0x7fa0630c9750&gt;, 'kwargs_to_prepare_input': 'positive', 'shape': [4, 1, 5, 1]} ]
+tensorflow_lite_tests/test_tfl_Binary.py::TestTFLiteBinaryLayerTest::test_binary[ ie_device:GPU - precision:FP32 - params:{'op_name': 'GREATER', 'op_func': &lt;function greater at 0x7fa07d1a2e60&gt;, 'shape': [6, 1]} ]
 tensorflow_lite_tests/test_tfl_DepthwiseConv2D.py::TestTFLiteDepthwiseConv2DLayerTest::test_depthwise_conv2d[ ie_device:CPU - precision:FP16 - params:{'shape': [9, 28, 18, 16], 'ksize': [1, 3, 3, 2], 'strides': [9, 9, 8, 3], 'padding': 'SAME', 'dilations': [10, 5]} ]
 tensorflow_lite_tests/test_tfl_DepthwiseConv2D.py::TestTFLiteDepthwiseConv2DLayerTest::test_depthwise_conv2d[ ie_device:CPU - precision:FP32 - params:{'shape': [9, 28, 18, 16], 'ksize': [1, 3, 3, 2], 'strides': [9, 9, 8, 3], 'padding': 'SAME', 'dilations': [10, 5]} ]
 tensorflow_lite_tests/test_tfl_DepthwiseConv2D.py::TestTFLiteDepthwiseConv2DLayerTest::test_depthwise_conv2d[ ie_device:GPU - precision:FP16 - params:{'shape': [9, 28, 18, 16], 'ksize': [1, 3, 3, 2], 'strides': [9, 9, 8, 3], 'padding': 'SAME', 'dilations': [10, 5]} ]
To see why this happens see Known limitations in documentation</error></testcase></testsuite></testsuites>